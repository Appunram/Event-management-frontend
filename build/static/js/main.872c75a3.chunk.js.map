{"version":3,"sources":["Auth/auth.js","services/api.js","components/header.js","components/Events/events.js","components/Signup/usesignupform.js","components/Signup/signupformvalidation.js","components/Message.js","components/Signup/signup.js","components/Login/useForm.js","components/Login/LoginFormValidationRules.js","components/Login/login.js","components/Home/home.js","components/footer.js","components/Quiz/displayquestions.js","components/Quiz/questions.js","components/Quiz/quiz.js","components/OnlineCompiler/stubs.js","components/OnlineCompiler/onlinecompiler.js","components/Stripe/CheckoutForm.js","components/Stripe/StripeContainer.js","components/EvenDetails/eventdetails.js","components/UserDetails/userdetails.js","components/ResetPassword/forgotpassword.js","components/ResetPassword/resetpassword.js","components/ResetPassword/updatepassword.js","components/UpdateUserDetails.js","admin/AdminDashboard/charts/barchart.js","admin/AdminDashboard/charts/piechart.js","admin/AdminDashboard/charts/linechart.js","admin/AdminDashboard/admindashboard.js","admin/ManageEvents/eventtable.js","admin/ManageEvents/manageevents.js","admin/ManageRegistrations/registrationeventtable.js","admin/ManageRegistrations/manageregistrations.js","admin/ManageAttendance/attendanceeventtable.js","admin/ManageAttendance/manageattendance.js","admin/ManageRegistrations/registreduserstable.js","admin/ManageAttendance/markattendance.js","admin/example/example.js","components/scrolltotop.js","Auth/PrivateRoutes.js","Auth/AdminRoutes.js","App.js","serviceWorker.js","index.js"],"names":["isAuthenticated","window","localStorage","getItem","JSON","parse","api","axios","create","baseURL","interceptors","request","use","config","accessToken","headers","error","Promise","reject","response","originalRequest","refreshToken","status","_retry","post","then","res","setItem","data","console","log","withRouter","props","useState","isOpen","setIsOpen","onClickLogoutHandler","a","RefreshToken","removeItem","toast","dark","history","push","Navbar","color","expand","sticky","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","isAdmin","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","Event","events","setEvents","rSelected","setRSelected","useEffect","getEvents","filterHandler","query","filter","url","get","ButtonGroup","Button","active","map","event","key","_id","src","thumbnail","alt","height","width","category","price","id","pathname","UsesignupForm","callback","Validatesignup","firstname","lastname","rollno","department","email","password","confirmpassword","values","setValues","profilepic","setProfilepic","errors","setErrors","isSubmitting","setIsSubmitting","errorMessage","setErrorMessage","handleSubmit","preventDefault","realFormData","serialize","indices","append","length","message","setTimeout","Object","keys","handleChange","target","name","value","handleImage","files","validate","test","Message","variant","children","Alert","defaultProps","Signup","preview","useMemo","URL","createObjectURL","onSubmit","noValidate","type","placeholder","onChange","style","backgroundImage","useForm","notify","first","last","full","persist","user","stringify","Login","htmlFor","autoComplete","required","Content","infiniteLoop","showThumbs","dynamicHeight","useKeyboardArrows","autoPlay","reverse","splice","Footer","size","DisplayQuestions","index","problem","setUsersChoice","userChoice","Spinner","question","correct","choices","image","desc","option","i","Form","toString","FormGroup","check","Label","Input","checked","questions","Timer","time","Progress","Quiz","setTime","setActive","problems","setProblems","current","setCurrent","selected","setSelected","finishQuiz","score","mark","match","params","alert","q","ind","Math","floor","random","temp","randomShuffle","choice","t","stubs","OnlineCompiler","pollInterval","code","setCode","output","setOutput","language","setLanguage","setJobId","setStatus","jobDetails","setJobDetails","payload","jobId","setInterval","statusRes","success","job","jobStatus","jobOutput","clearInterval","errMsg","err","stderr","e","confirm","rows","cols","submittedAt","startedAt","completedAt","result","moment","start","diff","renderTimeDetails","CheckoutForm","register","isProcessing","setProcessingTo","checkoutError","setCheckoutError","stripe","useStripe","elements","useElements","handleFormSubmit","ev","billingDetails","address","city","line1","state","postal_code","zip","cardElement","getElement","clientSecret","createPaymentMethod","card","billing_details","paymentMethodReq","confirmCardPayment","payment_method","paymentMethod","Container","row","for","sm","Col","options","hidePostalCode","offset","disabled","stripeTestPromise","loadStripe","Stripe","EventDetails","setEvent","modal","setModal","Date","currentdate","setcurrentDate","isRegistered","setIsRegistered","isAttended","setIsAttended","user_id","toggle","closeBtn","fetchData","Register","Attend","fetchCurrentDate","timer","isRegister","isAttend","registerEvent","acceptUser","eventid","description","title","date","format","sponsors","class","registrationenddate","Modal","ModalHeader","cssModule","close","StripeContainer","UserDetails","userdata","setUserdata","myevents","setMyevents","raw","setImage","myEvents","getDetails","getMyEvents","forEach","handleUpdate","formData","FormData","put","location","reload","display","ForgotPassword","setEmail","successMessage","setSuccessMessage","resetPassword","PasswordReset","token","UpdatePassword","UpdateUser","BarChart","chartData","setChartData","departments","users","labels","datasets","label","backgroundColor","borderColor","borderWidth","catch","chart","scales","yAxes","ticks","beginAtZero","categories","Dankmemes","registeredusers","dataObj","text","autoSkip","maxTicksLimit","gridLines","xAxes","AdminDashboard","eventscount","setEventscount","userscount","setUserscount","registercounts","setRegistercount","countEvent","countUser","countRegister","count","reduce","b","textAlign","Table","bordered","responsive","results","editEvent","deleteEvent","colSpan","ManageEvents","searchTerm","setSearchTerm","toLowerCase","includes","toLocaleLowerCase","delete","evt","block","registeredUsers","markAttendance","setRegisteredusers","getRegisteredUsers","deleteUser","MarkAttendance","setRollno","setUser","attendedusers","setAttendedusers","marks","setMarks","fullname","submitHandler","getMarks","bsSize","ModalBody","doc","jsPDF","setFontSize","orderedmarks","content","startY","theme","head","body","setLineWidth","autoTable","save","CreateEvent","setTitle","setDescription","setPrice","setCategory","setSponsors","setDate","setEndDate","setThumbnail","editthumbnail","setEditThumbnail","isAddMode","UpdateEvent","eventData","details","ChangeThumbnail","ScrollToTop","useLocation","scrollTo","PrivateRoute","Component","component","rest","render","to","from","AdminRoute","App","hideProgressBar","path","exact","Events","ResetPassword","UpdateUserDetails","AddEvent","ManageRegistrations","ManageAttendances","RegisteredUsersTable","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.872c75a3.chunk.js","sourcesContent":["export const isAuthenticated = () => {\n    if (typeof window == \"undefined\") {\n        return false;\n    }\n    if (localStorage.getItem(\"user\")) {\n        return JSON.parse(localStorage.getItem(\"user\"));\n    } else {\n        return false;\n    }\n};","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL:'http://localhost:8000'\n})\n\napi.interceptors.request.use(\n    (config) => {\n        const accessToken = localStorage.getItem(\"accessToken\");\n        if (accessToken) {\n            config.headers[\"Authorization\"] = \"Bearer \" + accessToken;\n        }\n        return config;\n    },\n    (error) => {\n        Promise.reject(error);\n    }\n);\n\napi.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    function (error) {\n        const originalRequest = error.config;\n        let refreshToken = localStorage.getItem(\"refreshToken\");\n\n        if (\n            refreshToken &&\n            error.response.status === 401 &&\n            !originalRequest._retry\n        ) {\n            originalRequest._retry = true;\n            return api\n                .post(\"/token\", { refreshToken: refreshToken })\n                .then((res) => {\n                    if (res.status === 200) {\n                        localStorage.setItem(\"accessToken\", res.data.accessToken);\n                        console.log(\"Access token refreshed!\");\n                        return api(originalRequest);\n                    }\n                });\n        }\n        return Promise.reject(error);\n    }\n);\n\n\nexport default api;","import React, { useState } from 'react';\nimport { isAuthenticated } from '../Auth/auth';\nimport { withRouter } from 'react-router-dom';\nimport { BsPeopleCircle } from 'react-icons/bs';\nimport { RiLogoutBoxFill } from \"react-icons/ri\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\nimport { toast } from 'react-toastify';\nimport api from '../services/api';\n\n\n\nconst Header = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n\n  const onClickLogoutHandler = async () => {\n    const RefreshToken = localStorage.getItem(\"refreshToken\")\n    await api.post(\"/logout\", RefreshToken)\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"refreshToken\");\n    localStorage.removeItem(\"accessToken\");\n    toast.dark(\"Logged out successfully\")\n    props.history.push(\"/login\")\n  }\n\n  return (\n    <Navbar color='dark' dark expand=\"md\" sticky=\"top\" >\n      <NavbarBrand href=\"/\">EVENT MANAGEMENT</NavbarBrand>\n      <NavbarToggler onClick={toggle} />\n      <Collapse isOpen={isOpen} navbar>\n        <Nav className=\"ml-auto\" navbar>\n          <NavItem>\n            <NavLink href=\"/\">HOME</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink href=\"/events\">EVENTS</NavLink>\n          </NavItem>\n          {isAuthenticated() && isAuthenticated().isAdmin && (\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                <BsPeopleCircle />  ADMIN\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem href=\"/admin/dashboard\">\n                  DASHBOARD\n                </DropdownItem>\n                <DropdownItem href=\"/admin/events\">\n                  MANAGE EVENTS\n                </DropdownItem>\n                <DropdownItem href=\"/admin/registrations\">\n                  MANAGE REGISTRATIONS\n                </DropdownItem>\n                <DropdownItem href=\"/admin/attendances\">\n                  MANAGE ATTENDANCES\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem>\n                  <span className=\"nav-link \" onClick={onClickLogoutHandler}><RiLogoutBoxFill />   LOGOUT</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          )}\n          {isAuthenticated() && !isAuthenticated().isAdmin && (\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                <BsPeopleCircle />  USER\n                </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem href=\"/user/profile\">\n                  DASHBOARD\n                </DropdownItem>\n                <DropdownItem href=\"/user/update-password\">\n                  CHANGE PASSWORD\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem>\n                  <span className=\"nav-link \" onClick={onClickLogoutHandler}><RiLogoutBoxFill />   LOGOUT</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          )}\n          {!isAuthenticated() && (\n            <>\n              <NavItem>\n                <NavLink href=\"/signup\">SIGNUP</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/login\">LOGIN</NavLink>\n              </NavItem>\n            </>\n          )}\n        </Nav>\n      </Collapse>\n    </Navbar>\n  );\n};\n\nexport default withRouter(Header);\n","import React, { useState, useEffect } from 'react';\nimport api from '../../services/api';\nimport { ButtonGroup, Button } from 'reactstrap';\nimport \"./events.css\";\n\nfunction Event(props) {\n  const [events, setEvents] = useState([]);\n  const [rSelected, setRSelected] = useState(null);\n\n\n  useEffect(() => {\n    getEvents()\n  }, [])\n\n  const filterHandler = (query) => {\n    setRSelected(query)\n    getEvents(query)\n  }\n\n  const getEvents = async (filter) => {\n    const url = filter ? `/events/${filter}` : '/events'\n    const response = await api.get(url);\n    setEvents(response.data);\n  };\n\n  const ShowDetails = (id) => {\n    props.history.push({\n      pathname: `/event/${id}`\n    });\n  }\n\n  return (\n    <div className=\"my-content\">\n      <br />\n      <div>Filter :{' '}\n        <ButtonGroup className=\"btn-group\" >\n          <Button color=\"primary\" onClick={() => filterHandler(null)} active={rSelected === null}>All Events</Button>\n          <Button color=\"primary\" onClick={() => filterHandler(\"Conference\")} active={rSelected === 'Conference'}>Conference</Button>\n          <Button color=\"primary\" onClick={() => filterHandler(\"Workshop\")} active={rSelected === 'Workshops'}>Workshops</Button>\n          <Button color=\"primary\" onClick={() => filterHandler(\"Hackathon\")} active={rSelected === 'Hackathons'}>Hackathons</Button>\n          <Button color=\"primary\" onClick={() => filterHandler(\"Technical Competitions\")} active={rSelected === 'Technical Competitions'}>Technical Competitions</Button>\n          <Button color=\"primary\" onClick={() => filterHandler(\"Programming Competitions\")} active={rSelected === 'Programming Competitions'}>Programming Competitions</Button>\n        </ButtonGroup>\n      </div>\n      <hr />\n      <div className=\"container my-container\">\n        {events.map(event => {\n          return (\n            <div key={event._id}>\n              <div className=\"row  my-row\" >\n                <div className=\" col-md col-sm  my-col \">\n                  <img src={event.thumbnail} className=\"img-circle img-center \" alt=\"eventimg\" height=\"200px\" width=\"300px\" />\n                </div>\n                <div className=\" col-md col-sm  my-col \">\n                  <strong>Event Category : </strong>\n                  {event.category}\n                </div>\n                <div className=\" col-md col-sm  my-col \">\n                  <strong> Event Price : </strong>\n                  {event.price === 0 ? \"FREE\" : `${event.price}`}\n                </div>\n                <div className=\" col-md col-sm  my-col \">\n                  <Button onClick={() => { ShowDetails(event._id) }}>VIEW DETAILS</Button>\n                </div>\n              </div>\n              <br />\n            </div>\n          )\n        })}\n      </div>\n      <br />\n    </div>\n  );\n}\nexport default Event;\n\n","import  { useState, useEffect } from \"react\";\nimport api from '../../services/api';\nimport { serialize } from 'object-to-formdata';\nimport {toast} from \"react-toastify\"\n\nconst UsesignupForm = (callback, Validatesignup, props) => {\n\n    const [values, setValues] = useState({ firstname: \"\", lastname: \"\", rollno: \"\", department: \"\", email: \"\", password: \"\",confirmpassword: \"\" });\n    const [profilepic, setProfilepic] = useState(null);\n    const [errors, setErrors] = useState({ firstname: \"\", lastname: \"\", rollno: \"\", department: \"\", email: \"\", password: \"\",confirmpassword: \"\"});\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    const handleChange = event => {\n        const { name, value } = event.target;\n        setValues(\n            {\n                ...values,\n                [name]: value\n            });\n    };\n\n    const handleImage = event =>{\n        setProfilepic(event.target.files[0])\n    }\n\n    const resetForm = () => {\n        setValues({ firstname: \"\", lastname: \"\", rollno: \"\", department: \"\", email: \"\", password: \"\", confirmpassword: \"\"})\n        setProfilepic(null)\n    }\n\n    const notify = () =>{\n        toast.dark(\"Account Created Successfully , You can login now \")\n    }\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n        setErrors(Validatesignup(values));\n        setIsSubmitting(true);\n        const realFormData = serialize(values, {indices: true});\n        realFormData.append('profilepic',profilepic);\n        try {\n            if (values.email !== \"\" &&\n                values.password !== \"\" &&\n                values.confirmpassword !== \"\" &&\n                values.firstname !== \"\" &&\n                values.lastname !== \"\" &&\n                values.rollno !== \"\" &&\n                values.department !== \"\" &&\n                values.password.length > 7 &&\n                values.confirmpassword.length > 7 && \n                profilepic !== null) {\n                await api.post('/register', realFormData);\n                props.history.push('/login');\n                notify();\n            }\n        } catch (error) {\n            if (error.response && error.response.data) {\n                setErrorMessage(error.response.data.message);\n                resetForm();\n                setTimeout(() => {\n                    setErrorMessage(\"\");\n                }, 3000);\n            }\n        }\n    };\n\n    useEffect(() => {\n        if (Object.keys(errors).length === 0 && isSubmitting) {\n            callback();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [errors]);\n\n    return {\n        handleChange,\n        handleImage,\n        handleSubmit,\n        values,\n        profilepic,\n        errors,\n        errorMessage\n    };\n\n};\nexport default UsesignupForm;","export default function validate(values) {\n    let errors = {};\n    if(!values.firstname){\n        errors.firstname='First Name is required';\n    }else if (!/^[A-Za-z]+$/.test(values.firstname)){\n        errors.firstname='First Name is invalid';\n    }\n    if(!values.lastname){\n        errors.lastname='Last Name is required';\n    }else if (!/^[A-Za-z]+$/.test(values.lastname)){\n        errors.lastname='Last Name is invalid';\n    }\n    if (!values.email) {\n      errors.email = 'Email address is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n      errors.email = 'Email address is invalid';\n    }\n    if (!values.password) {\n      errors.password = 'Password is required';\n    } else if (values.password.length < 8) {\n      errors.password = 'Password must be 8 or more characters';\n    }\n    if (!values.confirmpassword) {\n      errors.confirmpassword = 'Password is required';\n    } else if (values.confirmpassword.length < 8) {\n      errors.confirmpassword = 'Password must be 8 or more characters';\n    }\n    if(!values.rollno){\n      errors.rollno='Roll No is required';\n    }\n    if(!values.department){\n      errors.department='Department is required';\n    }\n    return errors;\n};","import React from 'react'\nimport { Alert } from 'reactstrap'\n\nconst Message = ({ variant, children }) => {\n  return <Alert color={variant}>{children}</Alert>\n}\n\nMessage.defaultProps = {\n  variant: 'info',\n}\n\nexport default Message","import React, { useMemo } from 'react';\nimport UsesignupForm from './usesignupform';\nimport Validatesignup from './signupformvalidation';\nimport Message from '../Message';\nimport { GoDeviceCamera } from \"react-icons/go\";\nimport './signup.css';\n\n\nconst Signup = (props) => {\n    const { handleChange, handleImage, handleSubmit, values, profilepic, errors, errorMessage } = UsesignupForm(submit, Validatesignup, props);\n\n    function submit() {\n        console.log(\"Submitted Sucessfully\");\n    }\n\n    const preview = useMemo(() => {\n        return profilepic ? URL.createObjectURL(profilepic) : null;\n    }, [profilepic]);\n\n    return (\n        <div className=\"my-content\">\n            <form className=\"text-center border border-light p-5\" onSubmit={handleSubmit} noValidate>\n                <h3>SIGN UP</h3>\n                <div className=\"form-row mb-4\">\n                    <div className=\"col\">\n                        <input type=\"text\" name=\"firstname\" className=\"form-control \" placeholder=\"First Name\" value={values.firstname} onChange={handleChange} />\n                        {errors.firstname && (\n                            <p className=\"error\">{errors.firstname}</p>\n                        )}\n                    </div>\n                    <div className=\"col\">\n                        <input type=\"text\" name=\"lastname\" className=\"form-control\" placeholder=\"Last Name\" value={values.lastname} onChange={handleChange} />\n                        {errors.lastname && (\n                            <p className=\"error\">{errors.lastname}</p>\n                        )}\n                    </div>\n                </div>\n                <input type=\"text\" name=\"rollno\" className=\"form-control \" placeholder=\"Roll No\" value={values.rollno} onChange={handleChange} />\n                {errors.rollno && (\n                    <p className=\"error\">{errors.rollno}</p>\n                )}\n                <br/>\n                <select id=\"department\" className=\"form-control\" name=\"department\" value={values.department} onChange={handleChange} >\n                    <option value=\"\">Select a Department</option>\n                    <option value=\"MECH\">MECH</option>\n                    <option value=\"EEE\">EEE</option>\n                    <option value=\"ECE\">ECE</option>\n                    <option value=\"CSE\">CSE</option>\n                    <option value=\"IT\">IT</option>\n                </select>\n                {errors.department && (\n                    <p className=\"error\">{errors.department}</p>\n                )}\n                <br/>\n                <input type=\"email\" name=\"email\" className=\"form-control mb-4\" placeholder=\"E-mail\" value={values.email} onChange={handleChange} />\n                {errors.email && (\n                    <p className=\"error\">{errors.email}</p>\n                )}\n                <input type=\"password\" name=\"password\" className=\"form-control\" placeholder=\"Password\" value={values.password} onChange={handleChange} />\n                {errors.password && (\n                    <p className=\"error\">{errors.password}</p>\n                )}\n                <br />\n                <input type=\"password\" name=\"confirmpassword\" className=\"form-control\" placeholder=\"Confirm Password\" value={values.confirmpassword} onChange={handleChange} />\n                {errors.confirmpassword && (\n                    <p className=\"error\">{errors.confirmpassword}</p>\n                )}\n                <label>Upload Profile Photo: </label>\n                <label id='profilepic' style={{ backgroundImage: `url(${preview})` }} className={profilepic ? 'has-profilepic' : ''}>\n                    <input type=\"file\" onChange={handleImage} />\n                    <GoDeviceCamera />\n                </label>\n                <span className=\"text-danger\">NOTE: Photo should be a passport size formal photo. This photo is further used for verification during participation of an event.</span>\n                <button className=\"btn btn-info my-4 btn-block\" type=\"submit\">Sign In</button>\n                <h5>By Clicking <em>Sign Up</em>,You agree to our Terms and Services</h5>\n                <hr />\n                <h6>Or Already had a account <a href=\"/login\">Click Here</a></h6>\n                {errorMessage && <Message variant='danger'>{errorMessage}</Message>}\n            </form>\n        </div>\n    );\n}\nexport default Signup;","import  { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport api from '../../services/api';\n\n\nconst useForm = (callback, validate, props) => {\n\n  const [values, setValues] = useState({ email: \"\", password: \"\" });\n  const [errors, setErrors] = useState({ email: \"\", password: \"\" });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [errors]);\n\n  const notify = (first, last) => {\n    const full = first + \" \" + last\n    toast.dark(`${full} logged in successfully`)\n  }\n\n  const handleSubmit = async event => {\n    if (event) event.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n    try {\n      if (values.email !== \"\" && values.password !== \"\") {\n        const response = await api.post('/login', values);\n        let { accessToken, refreshToken, user } = response.data;\n        const userId = user._id || false;\n        if (userId && accessToken) {\n          localStorage.setItem(\"accessToken\", accessToken);\n          localStorage.setItem(\"refreshToken\", refreshToken);\n          localStorage.setItem(\"user\", JSON.stringify(user));\n          notify(user.firstname, user.lastname)\n          props.history.push('/events')\n        }\n      }\n    } catch (error) {\n      if (error.response && error.response.data) {\n        setErrorMessage(error.response.data.message);\n        setTimeout(() => {\n          setErrorMessage(\"\");\n        }, 3000);\n      }\n    }\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n  };\n\n  return {\n    values,\n    errors,\n    errorMessage,\n    handleChange,\n    handleSubmit,\n  }\n};\n\nexport default useForm;","export default function validate(values) {\n    let errors = {};\n    if (!values.email) {\n      errors.email = 'Email address is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n      errors.email = 'Email address is invalid';\n    }\n    if (!values.password) {\n      errors.password = 'Password is required';\n    } else if (values.password.length < 8) {\n      errors.password = 'Password must be 8 or more characters';\n    }\n    return errors;\n  };","import React from 'react';\nimport useForm from \"./useForm\";\nimport validate from './LoginFormValidationRules';\nimport Message from '../Message';\nimport \"./login.css\"\n\n\nconst Login = (props) => {\n    const {\n        values,\n        errors,\n        errorMessage,\n        handleChange,\n        handleSubmit,\n    } = useForm(logging, validate, props);\n\n    function logging() {\n        console.log('No errors, submit callback called!');\n    }\n\n    return (\n        <div className=\"my-content\">\n            <div className=\"container my-container3\">\n                <br /><br />\n                <h2>LOGIN</h2>\n                <br />\n                <form onSubmit={handleSubmit} noValidate>\n                    <div >\n                        <label htmlFor=\"email\">Email Address</label>\n                        <div >\n                            <input autoComplete=\"off\" className={` ${errors.email && 'inputError'}`} type=\"email\" name=\"email\" onChange={handleChange} value={values.email || ''} required />\n                            {errors.email && (\n                                <p className=\"error\">{errors.email}</p>\n                            )}\n                        </div>\n                    </div>\n                    <br />\n                    <div>\n                        <label htmlFor=\"password\">Password</label>\n                        <div >\n                            <input className={` ${errors.password && 'inputError'}`} type=\"password\" name=\"password\" onChange={handleChange} value={values.password || ''} required />\n                        </div>\n                        {errors.password && (\n                            <p className=\"error\">{errors.password}</p>\n                        )}\n                    </div>\n                    <br />\n                    <button className=\"btn-info\" type=\"submit\">Login</button>\n                    <br />\n                    <hr />\n                    <h6>Forgot password ?<a href=\"/user/reset-password\">Click Here</a></h6>\n                    <h6>Haven't Registered <a href=\"/signup\">Click Here</a></h6>\n                    {errorMessage && <Message variant='danger'>{errorMessage}</Message>}\n                </form>\n            </div>\n        </div>\n    );\n}\nexport default Login;","import React, { useState, useEffect } from 'react';\nimport { Carousel } from 'react-responsive-carousel';\nimport api from '../../services/api';\nimport { Button } from 'reactstrap';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport \"./home.css\";\n\n\nfunction Content(props) {\n  const [events, setEvents] = useState([]);\n\n  useEffect(() => {\n    getEvents()\n  }, [])\n\n  const getEvents = async (filter) => {\n    const url = filter ? `/events/${filter}` : '/events'\n    const response = await api.get(url)\n\n    setEvents(response.data)\n  };\n\n  const ShowDetails = (id) => {\n    props.history.push({\n      pathname: `/event/${id}`\n    });\n  }\n\n  return (\n    <div className=\"content my-content\" >\n      <div className=\"carousel-wrapper\">\n        <Carousel infiniteLoop showThumbs={false} dynamicHeight useKeyboardArrows autoPlay>\n          <div>\n            <img src=\"/images/img-01.jpg\" alt=\"ss1\" />\n          </div>\n          <div>\n            <img src=\"/images/img-02.jpg\" alt=\"ss2\" />\n          </div>\n          <div>\n            <img src=\"/images/img-03.jpg\" alt=\"ss3\" />\n          </div>\n          <div>\n            <img src=\"/images/img-04.jpeg\" alt=\"ss4\" />\n          </div>\n        </Carousel>\n      </div>\n      <br /><br />\n      <h3><b>LATEST EVENTS</b></h3>\n      {\n        events.reverse().splice(0, 2).map(event => (\n          <div key={event._id} className=\"container my-container\">\n            <div className=\"row my-row\" >\n              <div className=\" col-md col-sm  my-col \">\n                <img src={event.thumbnail} className=\"img-circle img-center \" alt=\"event-img\" height=\"200px\" width=\"300px\" />\n              </div>\n              <div className=\" col-md col-sm  my-col \">\n                <b>Event Category : </b>\n                {event.category}\n              </div>\n              <div className=\" col-md col-sm  my-col \">\n                <b> Event Price : </b>\n                {event.price === 0 ? \"FREE\" : `${event.price}`}\n              </div>\n              <div className=\" col-md col-sm  my-col \">\n                <Button onClick={() => { ShowDetails(event._id) }}>VIEW DETAILS</Button>\n              </div>\n            </div>\n            <br /><br />\n          </div>\n        ))\n      }\n      <hr />\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-3 \">\n            <img className=\"about-us-image\" alt=\"aboutusimage\" src=\"/images/aboutus.jpg\" />\n          </div>\n          <div className=\"col-md-9\">\n            <h3><b>ABOUT US</b></h3>\n            <p>A legacy being carried forward by like-minded individuals aims to collaborate the intellects of programmers, designers, application developers, tech-geeks and newbies in the world of programming for the intensive development of a hack.</p>\n            <p> At hackCBS, we help you turn your ideas into reality by providing a comforting and welcoming enviornment. You’ll have all the freedom to create a product, learn new things, and to have hilariously funny moments with your friends. Moreover, we’ll offer you a chance to network with working professionals and hacker community leaders.</p>\n            <p>If you haven’t participated in any hackathon before and if you’re looking out for the opportunity to do so, you’re in the right place. We welcome all newcomers and veterans alike. You are about to witness a series of events which will enlighten as well as enhance your skills.</p>\n          </div>\n        </div>\n      </div>\n      <br />\n    </div>\n  );\n\n}\nexport default Content;","import React from 'react';\nimport {FaHome ,FaEnvelope,FaPhone,FaPrint,FaFacebook,FaTwitter,FaInstagramSquare, FaLinkedin} from \"react-icons/fa\";\n\nfunction Footer(){\n    return(\n        <div className=\"footer my-footer\">\n            <br/><br/>\n            <div className=\"container-fluid my-background text-white \">\n                <div className=\"row\">\n                    <div className=\" col-md-4 col-sm-4 \">\n                        <h4>EVENT MANAGEMENT</h4>\n                        <p>Participate in Hackathons and Workshops , Win Amazing prizes and gifts from us\n                            Go Fast and Register   </p>\n                    </div>\n                    <div className=\" col-md-3 col-sm-3 \">\n                        <h4>SERVICES</h4>\n                        <ul className=\"list-unstyled \">\n                            <li>\n                                <p>\n                                    <a href=\"/\" id=\"one\">HOME</a>\n                                </p>\n                            </li>\n                            <li>\n                                <p>\n                                    <a href=\"/events\" id=\"one\">EVENTS</a>\n                                </p>\n                            </li>\n                            <li>\n                                <p>\n                                    <a href=\"/signup\" id=\"one\">SIGN UP</a>\n                                </p>\n                            </li>\n                            <li>\n                                <p>\n                                    <a href=\"/login\" id=\"one\">LOGIN</a>\n                                </p>\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\" col-md-3 col-sm-3 \">\n                        <h4>ADDRESS</h4>\n                        <ul className=\"list-unstyled\">\n                            <li>\n                                <p>\n                                    <FaHome/>TAMIL NADU, INDIA\n                                </p>\n                            </li>\n                            <li>\n                                <p>\n                                    <FaEnvelope/>info@example.com\n                                </p>\n                            </li>\n                            <li>\n                                <p>\n                                    <FaPhone/>+91 1234567890\n                                </p>\n                            </li>\n                            <li>\n                                <p>\n                                    <FaPrint/>+91 1234567890\n                                </p>\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\" col-md-2 col-sm-2 \">\n                        <h4>FOLLOW US</h4>\n                        <ul className=\"list-unstyled\">\n                            <li>\n                                <a href=\"https://www.facebook.com/kumar.poshika/\" type=\"button\" className=\"btn-floating btn-large btn-fb\">\n                                    <FaFacebook  size=\"2rem\"/>\n                                </a>\n                            </li>\n                            <br/>\n                            <li>\n                                <a href=\"https://twitter.com/appun_ram\" type=\"button\" className=\"btn-floating btn-tw\">\n                                    <FaTwitter size=\"2rem\"/>\n                                </a>\n                            </li>\n                            <br/>\n                            <li>\n                                <a href=\"https://www.instagram.com/appun_ram/\" type=\"button \"  className=\"btn-floating btn-gplus\">\n                                    <FaInstagramSquare  size=\"2rem\"/>\n                                </a>\n                            </li>\n                            <br/>\n                            <li>\n                                <a href=\"https://www.linkedin.com/in/ram-kumar-674704189/\" type=\"button\" className=\"btn-floating btn-large btn-li\">\n                                    <FaLinkedin  size=\"2rem\"/>\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <div className=\"container-fluid my-background text-center\">\n                <p className=\"text-white\">&copy; 2020 Copyright: <a  id=\"one\" href=\"/\" >Eventmanagement.com</a></p>\n            </div>\n        </div>\n    );\n}\nexport default Footer;","import React from 'react';\nimport { Form, Spinner, FormGroup, Label, Input, Alert } from 'reactstrap';\n\nfunction DisplayQuestions(props) {\n    const { index, problem, active, setUsersChoice, userChoice } = props;\n    if (!problem) {\n        return <Spinner color='primary' />;\n    }\n\n    const { question, correct, choices, image, desc } = problem;\n\n    return (\n        <>\n            {image === 'None' ? (\n                ''\n            ) : (\n                    <div className='row'>\n                        <div className='col-12 text-center'>\n                            <img src={image} alt=\"loading\" />\n                        </div>\n                    </div>\n                )}\n            <div className='row'>\n                <div className='col-12 text-center'>\n                    <h5>{index + 1 + '. ' + question}</h5>\n                </div>\n            </div>\n            {choices.map((option, i) => (\n                <Form key={i.toString()}>\n                    <FormGroup check>\n                        <Label check>\n                            <Input\n                                type='radio'\n                                name={'radio' + i}\n                                checked={userChoice === i + 1}\n                                onChange={() => {\n                                    setUsersChoice(index, i + 1);\n                                }}\n                            />{' '}\n                            {option}\n                        </Label>\n                    </FormGroup>\n                </Form>\n            ))}\n            {!active ? (\n                <Alert color='info'>\n                    <b> Correct answer: </b> ({correct})\n                    <br />\n                    <b> Description: </b> ({desc})\n                </Alert>\n            ) : (\n                    ''\n                )}\n        </>\n    );\n}\n\nexport default DisplayQuestions;","const questions = [\n    {\n      question: 'Where is Taj Mahal Located?',\n      choices: ['Mumbai', 'Agra', 'New Delhi', 'None of these'],\n      correct: 2,\n      desc: 'Common Fact',\n      image: 'https://quizzing.s3.ap-south-1.amazonaws.com/taj.jpeg',\n    },\n    {\n      question: 'Who won the IPL title 4 times?',\n      choices: [\n        'Mumbai Indians',\n        'Chennai Super Kings',\n        'Sunrisers Hyderabad',\n        'Kolkata Knight Riders',\n      ],\n      correct: 1,\n      desc: 'Mumbai Indians won IPL in 2013,2015,2017 and 2019.',\n      image: 'None',\n    },\n    {\n      question: 'Where is statue of Ahinsa located?',\n      choices: ['Mysooree', 'Patna', 'Nashik', 'Thiruvananthapuram'],\n      correct: 3,\n      desc:\n        'The Statue of Ahimsa (121 feet tall), depicts the first Jain Tirthankara, Rishabhanatha, is located at Mangi-Tungi, near Nashik in the Indian state of Maharashtra.',\n      image: 'https://quizzing.s3.ap-south-1.amazonaws.com/statue.jpg',\n    },\n    {\n      question: \"Which of the following is called 'City of Lakes' ?\",\n      choices: ['New Delhi', 'Mount Abu', 'Nainital', 'Udaipur'],\n      correct: 4,\n      desc:\n        'Set around a series of artificial lakes, Udaipur is also known for its lavish royal residences',\n      image: 'None',\n    },\n    {\n      question: 'Which is the first smart city in world?',\n      choices: ['New Jersey', 'Seoul', 'Vatican City', 'California'],\n      correct: 2,\n      desc:\n        \"Seoul has been immersed in smart technology for years, having been named the world's first smart city back in 2014.\",\n      image: 'https://quizzing.s3.ap-south-1.amazonaws.com/seoul.jpeg',\n    },\n    {\n      question: 'Where is Gateway of India Located?',\n      choices: ['Mumbai', 'Chennai', 'New Delhi', 'Hyderabad'],\n      correct: 1,\n      desc: 'Common Fact',\n      image: 'https://quizzing.s3.ap-south-1.amazonaws.com/gateway.jpeg',\n    },\n    {\n      question: 'Which team won the IPL in 2019?',\n      choices: [\n        'Mumbai Indians',\n        'Chennai Super Kings',\n        'Sunrisers Hyderabad',\n        'Kolkata Knight Riders',\n      ],\n      correct: 1,\n      desc:\n        'Mumbai Indians won IPL in 2019, defeating Chennai Super Kings in the finals.',\n      image: 'None',\n    },\n    {\n      question: 'Which is the tallest waterfalls in the world ?',\n      choices: ['Jog Falls', 'Tugela Falls', 'Angel Falls', 'Victoria Falls'],\n      correct: 3,\n      desc:\n        ' Angel Falls (Salto ÄÂngel) in Venezuela is the highest waterfall in the world. The falls are 3230 feet in height.',\n      image: 'https://quizzing.s3.ap-south-1.amazonaws.com/fall.jpeg',\n    },\n    {\n      question: \"Which of the following is called 'the Land of Rising Sun' ?\",\n      choices: ['India', 'China', 'U.S.A', 'Japan'],\n      correct: 4,\n      desc:\n        'According to the words of the Japanese envoy himself, that name was chosen because the country was so close to where the sun rises. In any event, the name stuck, and for the last 1400 years or so, the world has referred to Japan as Nippon, the land of the rising sun.',\n      image: 'None',\n    },\n    {\n      question: 'Which is the southernmost point of India?',\n      choices: ['Siachin', 'Indira Point', 'Thiruvananthapuram', 'Kanyakumari'],\n      correct: 2,\n      desc:\n        \"The southernmost point of the Indian territory is Indira Point in the Andaman & Nicobar Islands. It's Cape Comorin or Kanyakumari that is the southernmost point in mainland India.\",\n      image: 'None',\n    },\n    {\n      question:\n        'Which of the following functions treats its arguement string as if it had actually been coded at that point in the program?',\n      choices: ['bind()', 'apply()', 'eval()', 'with()'],\n      correct: 3,\n      desc:\n        \"eval() is a function used to cheat lexical scope. For eg. eval('var a=2')\",\n      image: 'None',\n    },\n    {\n      question:\n        'What would be the output of following code? console.log(Number([]))',\n      choices: ['NaN', '0', \"'0'\", \"'NaN'\"],\n      correct: 2,\n      desc: 'Common Fact',\n      image: 'None',\n    },\n    {\n      question: 'Which of the following is not an \"ES6\" feature ?',\n      choices: [\n        'let statement',\n        'Promises',\n        'arrow functions',\n        'Strict Equality(===)',\n      ],\n      correct: 4,\n      desc:\n        'The Strict Equality feature was also in the older versions of Javascript. However, other features had been introduced in ES6 (2015) .',\n      image: 'None',\n    },\n    {\n      question:\n        \"What is the output of the code snippet? var obj={a:42,b:'hello'}; var b='a'; console.log(obj[b]+obj.b);\",\n      choices: ['42hello', 'hello42', '84', 'hellohello'],\n      correct: 1,\n      desc:\n        \"When[] is used to access property, the property name should be in double quotes or single quotes. Also, when '+' is used with a string, it is used as 'concatenation operator'\",\n      image: 'None',\n    },\n    {\n      question: \"Which of the following brands invented 'JavaScript'?\",\n      choices: ['Mozilla', 'Netscape', 'Opera', 'Google'],\n      correct: 2,\n      desc:\n        'Netscape is a brand name associated with the development of the Netscape web browser. It created the JavaScript programming language, the most widely used language for client-side scripting of web pages, to be used in its Netscape browser, at first.',\n      image: 'https://quizzing.s3.ap-south-1.amazonaws.com/browser.jpg',\n    },\n    {\n      question:\n        \"What is the output of below given code snippet? var a=[1,2,3]; var b=[1,2,3]; var c='1,2,3' console.log(a==c) console.log(b==c) console.log(a==b)\",\n      choices: [\n        'true, true, false',\n        'false, false, true',\n        'true, true, true',\n        'false, false, false',\n      ],\n      correct: 1,\n      desc:\n        \"On comparing objects in JS (Arrays are also built-in objects in JS), values are actually held by references. So, only references are compared, not values. Arrays are by default, coerced to all values with comma, in a string, when compared with a string. For eg. [1,2,3] becomes '1,2,3'\",\n      image: 'None',\n    },\n    {\n      question: 'If x!==x in JavaScript, find the value of x?',\n      choices: ['undefined', 'NaN', 'null', 'window object'],\n      correct: 2,\n      desc:\n        'NaN is not equal to NaN. This concept is used to polyfil the function for isNaN() for older browsers.',\n      image: 'None',\n    },\n    {\n      question: 'What would parseInt(1/0,19) return ?',\n      choices: ['Infinity', 'NaN', '19', '18'],\n      correct: 4,\n      desc:\n        \"The second arguement of parseInt() is the radix value. When 1/0 is performed, it returns 'Infinity', the radix value being 19 (means symbols from 0-9 and a-i used), it returns 'i', so output is equivalent to decimal value of '18' \",\n      image: 'None',\n    },\n    {\n      question: 'Who developed JavaScript?',\n      choices: [\n        'Brendan Eich',\n        'Guido van Rossum',\n        'James Gosling',\n        'Bjarne Stroustrup',\n      ],\n      correct: 1,\n      desc:\n        'Brendan Eich, a Netscape Communications Corporation programmer, created JavaScript in September 1995. ',\n      image: 'https://quizzing.s3.ap-south-1.amazonaws.com/js_dev.jpeg',\n    },\n  ];\n  export default questions;","import React, { useEffect, useState } from 'react';\nimport { Progress, Button } from 'reactstrap';\nimport DisplayQuestions from './displayquestions';\nimport questions from './questions';\nimport api from \"../../services/api\";\n\nfunction randomShuffle(q) {\n  for (let i = q.length - 1; i > 0; i--) {\n    let ind = Math.floor(Math.random() * (i + 1));\n    let temp = q[i];\n    q[i] = q[ind];\n    q[ind] = temp;\n  }\n  return q;\n}\n\nfunction Timer(props) {\n  const { time } = props;\n  return (\n    <div className='container'>\n      <div className='text-center'>\n        {time === 0\n          ? \"Time's up\"\n          : time + \" seconds left\"}\n      </div>\n      <Progress value={100 - time} color=\"danger\" />\n    </div>\n  );\n}\n\nfunction Quiz(props) {\n  const [time, setTime] = useState(100); // time remaining;\n  const [active, setActive] = useState(true); // sate of the quiz;\n  const [problems, setProblems] = useState(null);\n  const [current, setCurrent] = useState(0);\n  const [selected, setSelected] = useState([null, null, null, null, null]);\n\n\n  const finishQuiz = async () => {\n    setActive(false);\n    let score = 0;\n    for (let i = 0; i < problems.length; i++) {\n      if (problems[i].correct === selected[i])\n        score += 20;\n    }\n    let mark = score\n    console.log(mark)\n    const response = await api.post(\"/\" + props.match.params.id + \"/marks\", {mark});\n    console.log(response)\n    alert('Congrats! Your score is' + score + \" out of 100\");\n    props.history.push(\"/user/profile\")\n  }\n\n  const setUsersChoice = (index, choice) => {\n    let t = selected;\n    t[index] = choice;\n    setSelected(t);\n  }\n\n  useEffect(() => {\n    if (time === 0) {\n      finishQuiz();\n    }\n    if (active && time !== 0) {\n      setTimeout(() => {\n        setTime(time - 1);\n      }, 1000);\n    }\n    // eslint-disable-next-line\n  }, [time]);\n\n  useEffect(() => {\n    setProblems(randomShuffle(questions).splice(0, 5));\n  }, []);\n\n  return (\n    <div className='container my-content text-black'>\n      <div className='row'>\n        <div className='col-12 text-center'>\n          <Timer time={time} />\n          <br />\n          <br />\n          <DisplayQuestions\n            index={current}\n            problem={!problems ? null : problems[current]}\n            active={active}\n            userChoice={selected[current]}\n            setUsersChoice={setUsersChoice}\n          />\n          {current !== 0 ? (\n            <>\n              <Button\n                color='info'\n                onClick={() => {\n                  setCurrent(current - 1);\n                }}\n              >\n                Previous\n              </Button>{' '}\n            </>\n          ) : (\n            ''\n          )}\n          {current !== 4 ? (\n            <>\n              <Button\n                color='info'\n                onClick={() => {\n                  setCurrent(current + 1);\n                }}\n              >\n                Next\n              </Button>{' '}\n            </>\n          ) : (\n            ''\n          )}\n          {\n            active ?\n              <>\n                <Button\n                  color='info'\n                  onClick={() => {\n                    finishQuiz();\n                  }}\n                >\n                  Submit\n              </Button>{' '}\n              </>\n              : \"\"\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Quiz;","const stubs = {};\n\nstubs.cpp = `#include <iostream>\n#include <stdio.h>\nusing namespace std;\nint main() {\n  cout<<\"Hello world!\\\\n\";\n  return 0;\n}\n`;\n\nstubs.py = `print(\"Hello world!\")`;\n\nexport default stubs;","import React, { useState, useEffect } from 'react';\nimport stubs from \"./stubs\";\nimport moment from \"moment\";\nimport api from \"../../services/api\";\n\nconst OnlineCompiler = (props) => {\n    const [code, setCode] = useState(\"\");\n    const [output, setOutput] = useState(\"\");\n    const [language, setLanguage] = useState(\"cpp\");\n    const [jobId, setJobId] = useState(null);\n    const [status, setStatus] = useState(null);\n    const [jobDetails, setJobDetails] = useState(null);\n\n    useEffect(() => {\n        setCode(stubs[language]);\n    }, [language]);\n\n    let pollInterval;\n\n    const handleSubmit = async () => {\n        const payload = {\n            language,\n            code,\n        };\n        try {\n            setOutput(\"\");\n            setStatus(null);\n            setJobId(null);\n            setJobDetails(null);\n            const { data } = await api.post(\"/run\", payload);\n            if (data.jobId) {\n                setJobId(data.jobId);\n                setStatus(\"Submitted.\");\n\n                // poll here\n                pollInterval = setInterval(async () => {\n                    const { data: statusRes } = await api.get(\n                        `/status`,\n                        {\n                            params: {\n                                id: data.jobId,\n                            },\n                        }\n                    );\n                    const { success, job, error } = statusRes;\n                    console.log(statusRes);\n                    if (success) {\n                        const { status: jobStatus, output: jobOutput } = job;\n                        setStatus(jobStatus);\n                        setJobDetails(job);\n                        if (jobStatus === \"pending\") return;\n                        setOutput(jobOutput);\n                        clearInterval(pollInterval);\n                    } else {\n                        console.error(error);\n                        setOutput(error);\n                        setStatus(\"Bad request\");\n                        clearInterval(pollInterval);\n                    }\n                }, 1000);\n            } else {\n                setOutput(\"Retry again.\");\n            }\n        } catch ({ response }) {\n            if (response) {\n                const errMsg = response.data.err.stderr;\n                setOutput(errMsg);\n            } else {\n                setOutput(\"Please retry submitting.\");\n            }\n        }\n    };\n\n    const renderTimeDetails = () => {\n        if (!jobDetails) {\n            return \"\";\n        }\n        let { submittedAt, startedAt, completedAt } = jobDetails;\n        let result = \"\";\n        submittedAt = moment(submittedAt).toString();\n        if (!startedAt || !completedAt) return result;\n        const start = moment(startedAt);\n        const end = moment(completedAt);\n        const diff = end.diff(start, \"seconds\", true);\n        result += `Execution Time: ${diff}s`;\n        return result;\n    };\n\n    return (\n        <div className=\"compiler my-content\">\n            <h2>Online Code Compiler</h2>\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <label>Language:</label>\n                        <select\n                            value={language}\n                            onChange={(e) => {\n                                const shouldSwitch = window.confirm(\n                                    \"Are you sure you want to change language? WARNING: Your current code will be lost.\"\n                                );\n                                if (shouldSwitch) {\n                                    setLanguage(e.target.value);\n                                }\n                            }}\n                        >\n                            <option value=\"cpp\">C++</option>\n                            <option value=\"py\">Python</option>\n                        </select>\n                        <br />\n                        <textarea\n                            rows=\"20\"\n                            cols=\"60\"\n                            value={code}\n                            onChange={(e) => {\n                                setCode(e.target.value);\n                            }}\n                        ></textarea>\n                        <br />\n                        <button onClick={handleSubmit}>Submit</button>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <br/>\n                        <br/>\n                        <p>{status}</p>\n                        <p>{renderTimeDetails()}</p>\n                        <p>{output}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default OnlineCompiler;","import React, { useState } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport Message from \"../Message\";\nimport api from \"../../services/api\";\nimport { Form, FormGroup, Label, Col, Input, Button, Container } from \"reactstrap\";\n\nexport const CheckoutForm = ({ event, register }) => {\n    const [isProcessing, setProcessingTo] = useState(false);\n    const [checkoutError, setCheckoutError] = useState();\n\n    const stripe = useStripe();\n    const elements = useElements();\n\n    const handleCardDetailsChange = ev => {\n        ev.error ? setCheckoutError(ev.error.message) : setCheckoutError();\n    };\n\n    const handleFormSubmit = async ev => {\n        ev.preventDefault();\n\n        const billingDetails = {\n            name: ev.target.name.value,\n            email: ev.target.email.value,\n            address: {\n                city: ev.target.city.value,\n                line1: ev.target.address.value,\n                state: ev.target.state.value,\n                postal_code: ev.target.zip.value\n            }\n        };\n\n        setProcessingTo(true);\n\n        const cardElement = elements.getElement(\"card\");\n\n        try {\n            const { data: clientSecret } = await api.post(\"/payment\", {\n                event\n            });\n\n            const paymentMethodReq = await stripe.createPaymentMethod({\n                type: \"card\",\n                card: cardElement,\n                billing_details: billingDetails\n            });\n\n            if (paymentMethodReq.error) {\n                setCheckoutError(paymentMethodReq.error.message);\n                setProcessingTo(false);\n                return;\n            }\n\n            const { error } = await stripe.confirmCardPayment(clientSecret, {\n                payment_method: paymentMethodReq.paymentMethod.id\n            });\n\n            if (error) {\n                setCheckoutError(error.message);\n                setTimeout(() => {\n                    setCheckoutError(\"\");\n                }, 3000);\n                setProcessingTo(false);\n                return;\n            }\n            register();\n        } catch (err) {\n            setCheckoutError(err.message);\n            setTimeout(() => {\n                setCheckoutError(\"\");\n            }, 3000);\n            setProcessingTo(false);\n        }\n\n    }\n\n    return (\n        <Container>\n            <Form onSubmit={handleFormSubmit}>\n                <FormGroup row>\n                    <Label for=\"name\" sm={2}>NAME</Label>\n                    <Col sm={10}>\n                        <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Enter Name\" required />\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Label for=\"Email\" sm={2}>EMAIL</Label>\n                    <Col sm={10}>\n                        <Input type=\"email\" name=\"email\" id=\"Email\" placeholder=\"Enter Email\" required />\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Label for=\"address\" sm={2}>ADDRESS</Label>\n                    <Col sm={10}>\n                        <Input type=\"text\" name=\"address\" id=\"address\" placeholder=\"Enter Address\" required />\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Label for=\"city\" sm={2}>CITY</Label>\n                    <Col sm={10}>\n                        <Input type=\"text\" name=\"city\" id=\"city\" placeholder=\"Enter City\" required />\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Label for=\"state\" sm={2}>STATE</Label>\n                    <Col sm={10}>\n                        <Input type=\"text\" name=\"state\" id=\"state\" placeholder=\"Enter State\" required />\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Label for=\"ZIP\" sm={2}>ZIP</Label>\n                    <Col sm={10}>\n                        <Input type=\"text\" name=\"zip\" id=\"ZIP\" placeholder=\"Enter ZIP\" required />\n                    </Col>\n                </FormGroup>\n                <br />\n                <CardElement\n                    options={{ hidePostalCode: true }}\n                    onChange={handleCardDetailsChange}\n                />\n                <br />\n                <FormGroup row>\n                    <Col sm={{ size: 10, offset: 5 }}>\n                        <Button color=\"danger\" disabled={isProcessing || !stripe}>\n                            {isProcessing ? \"Processing...\" : `Pay ₹${event.price}`}\n                        </Button>\n                    </Col>\n                </FormGroup>\n                <p style={{ color: \"#FF0000\" }}>NOTE : Once Payed, Amount will not be refunded .</p>\n                {checkoutError && <Message variant='danger'>{checkoutError}</Message>}\n            </Form>\n        </Container>\n    );\n};","import React from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\n\nimport { CheckoutForm } from \"./CheckoutForm\";\n\nconst PUBLIC_KEY = \"pk_test_51Ht4kbEbuNVtPuVmgl6YUOezAD4wu4RLc6FW2deHCZ0zcFtWu7DcmX3FOT9mKjXXWDrO039xXslJNgN7EooO0xMy00BI8p7KU0\";\n\nconst stripeTestPromise = loadStripe(PUBLIC_KEY);\n\nconst Stripe = (props) => {\n  return (\n    <Elements stripe={stripeTestPromise}>\n      <CheckoutForm event={props.event} register={props.register}/>\n    </Elements>\n  );\n};\n\nexport default Stripe;","import React, { useState, useEffect } from 'react';\nimport StripeContainer from \"../Stripe/StripeContainer\";\nimport moment from 'moment';\nimport api from '../../services/api';\nimport { toast } from 'react-toastify';\nimport { isAuthenticated } from \"../../Auth/auth\";\nimport { Button, Modal, ModalHeader } from 'reactstrap';\nimport './evendetails.css';\n\nconst EventDetails = (props) => {\n    const [event, setEvent] = useState({});\n    const [modal, setModal] = useState(false);\n    var [currentdate, setcurrentDate] = useState(new Date());\n    const [isRegistered, setIsRegistered] = useState(false);\n    const [isAttended, setIsAttended] = useState(false);\n    const user = isAuthenticated();\n    let user_id = user._id;\n    const toggle = () => setModal(!modal);\n\n    const closeBtn = (\n        <button className=\"close\" onClick={toggle}>\n            &times;\n        </button>\n    );\n\n    useEffect(() => {\n        fetchData();\n        Register();\n        Attend();\n        fetchCurrentDate();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const fetchCurrentDate = async () => {\n        var timer = setInterval(() => setcurrentDate(new Date()), 1000)\n        return function cleanup() {\n            clearInterval(timer)\n        }\n    }\n\n    const fetchData = async () => {\n        try {\n            const url = \"/event/\" + props.match.params.id;\n            const result = await api.get(url);\n            setEvent(result.data);\n        } catch (error) {\n            console.log(error.response.data.message);\n            props.history.push(\"/login\");\n        }\n    };\n\n    const Register = async () => {\n        try {\n            const url = \"/isregister/\" + props.match.params.id;\n            const result = await api.get(url, { headers: { user_id } });\n            if (result.data.isRegister) {\n                setIsRegistered(true)\n            }\n        } catch (error) {\n            console.log(error.response.data.message);\n        }\n    };\n\n    const Attend = async () => {\n        try {\n            const url = \"/isattend/\" + props.match.params.id;\n            const result = await api.get(url, { headers: { user_id } });\n            if (result.data.isAttend) {\n                setIsAttended(true)\n            }\n        } catch (error) {\n            console.log(error.response.data.message);\n        }\n    };\n\n    const registerEvent = async () => {\n        try {\n            const response = await api.post(\"/event/\" + props.match.params.id + \"/register\");\n            console.log(response.data);\n            toast.dark(response.data.message)\n            props.history.push(\"/user/profile\");\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const acceptUser = async (id, eventid) => {\n        try {\n            let user_id = id;\n            await api.get(\"/\" + props.match.params.id + \"/accept\", { headers: { user_id } });\n            props.history.push({\n                pathname: `/quiz/${eventid}`\n            });\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    return (\n        <div className=\"my-content\">\n            <br />\n            <div className=\"container \">\n                <div className=\"row\">\n                    <div className=\"col-md-5\">\n                        <div className=\"project-info-box mt-0\">\n                            <h5>EVENT DESCRIPTION</h5>\n                            <p className=\"mb-0\">{event.description}</p>\n                        </div>\n                        <div className=\"project-info-box\">\n                            <h5>EVENT DETAILS</h5>\n                            <p><b>TITLE:</b>{event.title}</p>\n                            <p><b>CATEGORY:</b> {event.category}</p>\n                            <p><b>DATE:</b>{moment(event.date).format('L')}</p>\n                            <p><b>SPONSORS:</b> {event.sponsors}</p>\n                            {event.price === 0 ? (<p className=\"price mb-0\"><b>PRICE:</b>FREE</p>) : (<p className=\"price mb-0\"><b>PRICE:</b>{event.price}</p>)}\n                        </div>\n                    </div>\n                    <div className=\"col-md-7\">\n                        <img className=\"event-details-img\" src={event.thumbnail} alt=\"projectimage\" class=\"rounded\" />\n                        <div className=\"project-info-box\">\n                            <p><b>REGISTRATION ENDS ON:</b> {moment(event.registrationenddate).format('L')}</p>\n                            <p style={{ color: \"#FF0000\" }}>NOTE : Once Registered, You cannot unregister .</p>\n                            {\n                                isRegistered ?\n                                    (\n                                        event.category === \"Technical Competitions\" ? (\n                                            (moment(event.date).format('L') === moment(currentdate).format('L') && !isAttended) ? (\n                                                <>\n                                                    <Button color=\"danger\" disabled>REGISTERED</Button>\n                                                    <Button color=\"warning\" className=\"event-button\" onClick={() => { acceptUser(user_id, event._id) }} >PARTICIPATE</Button>\n                                                </>\n                                            ) : (\n                                                <>\n                                                    <p style={{ color: \"#FF0000\" }}>You can participate at the Event date or You participated already </p>\n                                                    <Button color=\"danger\" disabled>REGISTERED</Button>\n                                                    <Button color=\"warning\" className=\"event-button\" disabled>PARTICIPATE</Button>\n                                                </>\n                                            )\n                                        ) : event.category === \"Programming Competitions\" ? (\n                                            (moment(event.date).format('L') === moment(currentdate).format('L') && !isAttended) ? (\n                                                <>\n                                                    <Button color=\"danger\" disabled>REGISTERED</Button>\n                                                    <Button color=\"warning\" className=\"event-button\" onClick={() => { props.history.push(\"/compiler\") }} >PARTICIPATE</Button>\n                                                </>\n                                            ) : (\n                                                <>\n                                                    <Button color=\"danger\" disabled>REGISTERED</Button>\n                                                    <Button color=\"danger\" className=\"event-button\" disabled>PARTICIPATE</Button>\n                                                </>\n                                            )\n                                        ) :\n                                            (\n                                                <Button color=\"danger\" disabled>REGISTERED</Button>\n                                            )\n                                    ) :\n                                    (event.price === 0 ?\n                                        (<Button color=\"danger\" onClick={registerEvent}>REGISTER</Button>)\n                                        :\n                                        (<>\n                                            <Button color=\"danger\" onClick={toggle}>REGISTER</Button>\n                                            <Modal isOpen={modal} toggle={toggle} >\n                                                <ModalHeader className=\" border-0\" cssModule={{ 'modal-title': 'w-100 text-center' }} toggle={toggle} close={closeBtn}>\n                                                    PAY FOR EVENT REGISTRATION\n                                                </ModalHeader>\n                                                <StripeContainer event={event} register={registerEvent} />\n                                            </Modal>\n                                        </>)\n                                    )\n\n                            }\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default EventDetails;","import React, { useEffect, useState } from \"react\";\nimport { Button } from \"reactstrap\";\nimport Message from '../Message';\nimport api from \"../../services/api\";\nimport \"./userdetails.css\";\n\n\nconst UserDetails = (props) => {\n    const [userdata, setUserdata] = useState([]);\n    const [myevents, setMyevents] = useState([]);\n    const [image, setImage] = useState({ preview: \"\", raw: \"\" });\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    let myEvents = [];\n\n    useEffect(() => {\n        getDetails()\n        getMyEvents()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n\n    const getDetails = async () => {\n        try {\n            const result = await api.get(\"/user/profile\");\n            setUserdata(result.data);\n        } catch (error) {\n            console.log(error.response.data.message);\n            props.history.push(\"/login\");\n        }\n    };\n\n    const getMyEvents = async () => {\n        try {\n            const response = await api.get(\"/myevents\");\n            response.data.forEach(data => {\n                myEvents.push(data.event)\n            });\n            console.log(myEvents);\n            setMyevents(myEvents)\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const fullname = () => {\n        return userdata.firstname + \" \" + userdata.lastname;\n    };\n\n    const handleChange = e => {\n        if (e.target.files.length) {\n            setImage({\n                preview: URL.createObjectURL(e.target.files[0]),\n                raw: e.target.files[0]\n            });\n        }\n    };\n\n    const handleUpdate = async e => {\n        e.preventDefault();\n        try {\n            const formData = new FormData();\n            formData.append(\"profilepic\", image.raw);\n            await api.put(\"/user/profilephoto\", formData)\n            window.location.reload();\n        } catch (error) {\n            if (error.response && error.response.data) {\n                setErrorMessage(error.response.data.message);\n                setTimeout(() => {\n                    setErrorMessage(\"\");\n                }, 3000);\n            }\n        }\n    };\n\n    const handleCancel = () => {\n        window.location.reload();\n    }\n\n    const ShowDetails = (id) => {\n        props.history.push({\n            pathname: `/event/${id}`\n        });\n    }\n\n    return (\n        <div className=\"content my-content\">\n            <div className=\"container\">\n                <br />\n                <div className=\"row\">\n                    <div className=\"col-md-4 \">\n                        <label htmlFor=\"upload-button\">\n                            {image.preview ?\n                                (\n                                    <img src={image.preview} alt=\"dummy\" className=\"profile-pic\" />\n                                ) : (\n                                    <div className=\"change-photo\">\n                                        <img src={userdata.profilepic} alt=\"dummy\" className=\"profile-pic\" />\n                                        <div className=\"change-text\">\n                                            <h3>CHANGE PHOTO</h3>\n                                        </div>\n                                    </div>\n\n                                )}\n                        </label>\n                        <input\n                            type=\"file\"\n                            id=\"upload-button\"\n                            style={{ display: \"none\" }}\n                            onChange={handleChange}\n                        />\n                        <br />\n                        {image.raw ?\n                            (\n                                <div>\n                                    <button className=\"btn-info event-button\" onClick={handleUpdate}>Update</button>\n                                    <button className=\"btn-danger event-button\" onClick={handleCancel}>Cancel</button>\n                                </div>\n                            ) : (\n                                <></>\n                            )\n                        }\n\n                    </div>\n                    <div className=\"col-md-8\">\n                        <h5>NAME : {fullname()}</h5>\n                        <hr />\n                        <h5>EMAIL ID : {userdata.email}</h5>\n                        <hr />\n                        <h5>ROLL NO : {userdata.rollno}</h5>\n                        <hr />\n                        <h5>DEPARTMENT : {userdata.department}</h5>\n                        <hr />\n                        <Button color=\"info\" onClick={() => { props.history.push(\"/user/updateprofile\") }}>Update Details</Button>\n                    </div>\n                    {errorMessage && <Message variant='danger'>{errorMessage}</Message>}\n                </div>\n                <br />\n                <div className=\"separator\"><h4>MY EVENTS</h4></div>\n                <div className=\"container \">\n                    {myevents.map(event => {\n                        return (\n                            <div key={event._id}>\n                                <div className=\"row  my-row\" >\n                                    <div className=\" col-md col-sm  my-col \">\n                                        <img src={event.thumbnail} className=\"img-circle img-center \" alt=\"eventimage\" height=\"200px\" width=\"300px\" />\n                                    </div>\n                                    <div className=\" col-md col-sm  my-col \">\n                                        <strong>Event Category : </strong>\n                                        {event.category}\n                                    </div>\n                                    <div className=\" col-md col-sm  my-col \">\n                                        <strong> Event Price : </strong>\n                                        {event.price === 0 ? \"FREE\" : `${event.price}`}\n                                    </div>\n                                    <div className=\" col-md col-sm  my-col \">\n                                        <Button onClick={() => { ShowDetails(event._id) }}>VIEW DETAILS</Button>\n                                    </div>\n                                </div>\n                                <br />\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        </div >\n    )\n}\nexport default UserDetails;","import React, { useState } from 'react';\nimport api from '../../services/api';\nimport Message from '../Message';\n\nconst ForgotPassword = (props) => {\n    const [email, setEmail] = useState(\"\")\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [successMessage, setSuccessMessage] = useState(\"\");\n\n    const resetPassword = async () => {\n        try {\n            const response = await api.post(\"/forgot-password\", {\n                email,\n            });\n            console.log(response.data);\n            setSuccessMessage(response.data.message);\n            setTimeout(() => {\n                setSuccessMessage(\"\");\n            }, 3000);\n        } catch (error) {\n            console.log(error)\n            if (error.response && error.response.data) {\n                setErrorMessage(error.response.data.message);\n                setTimeout(() => {\n                    setErrorMessage(\"\");\n                }, 3000);\n            }\n        }\n    }\n    return (\n        <div className=\"my-content\">\n            <div className=\"container my-container3\">\n                <br /><br />\n                <h2>PASSWORD RESET</h2>\n                <input\n                    type=\"text\"\n                    placeholder=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n                <button className=\"btn-info\" onClick={() => resetPassword()}>\n                    reset password\n                </button>\n                <br/>\n                <br/>\n                {errorMessage && <Message variant='danger'>{errorMessage}</Message>}\n                {successMessage && <Message variant='success'>{successMessage}</Message>}\n            </div>\n        </div>\n    )\n}\n\nexport default ForgotPassword;\n","import React, { useState } from 'react';\nimport api from '../../services/api';\nimport Message from '../Message';\n\nconst ForgotPassword = (props) => {\n    const [values, setValues] = useState({ password: \"\", confirmpassword: \"\" });\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [successMessage, setSuccessMessage] = useState(\"\");\n\n    const handleChange = event => {\n        const { name, value } = event.target;\n        setValues(\n            {\n                ...values,\n                [name]: value\n            });\n    };\n\n    const PasswordReset = async () => {\n        try {\n            const token = props.match.params.token\n            const { password, confirmpassword } = values\n            if (password.length > 7 && confirmpassword.length > 7) {\n                const response = await api.put(\"/resetpassword\", { password, confirmpassword, token })\n                console.log(response.data);\n                setValues({ password: \"\", confirmpassword: \"\" });\n                setSuccessMessage(response.data.message);\n                setTimeout(() => {\n                    setSuccessMessage(\"\");\n                }, 3000);\n            } else {\n                setErrorMessage(\"Password Should be more than or equal to 8 characters\");\n                setTimeout(() => {\n                    setErrorMessage(\"\");\n                }, 3000);\n            }\n        } catch (error) {\n            console.log(error)\n            if (error.response && error.response.data) {\n                setErrorMessage(error.response.data.message);\n                setTimeout(() => {\n                    setErrorMessage(\"\");\n                }, 3000);\n            }\n        }\n    }\n\n    return (\n        <div className=\"my-content\">\n            <div className=\"container my-container3\">\n                <br /><br />\n                <h3>CHANGE PASSWORD</h3>\n                <input type=\"password\" name=\"password\" className=\"form-control\" placeholder=\"Enter Password\" value={values.password} onChange={handleChange} />\n                <br />\n                <input type=\"password\" name=\"confirmpassword\" className=\"form-control\" placeholder=\"Enter Confirm Password\" value={values.confirmpassword} onChange={handleChange} />\n                <br />\n                <button className=\"btn-info\" onClick={() => PasswordReset()}>\n                    Reset Password\n                </button>\n                <br />\n                <br />\n                {errorMessage && <Message variant='danger'>{errorMessage}</Message>}\n                {successMessage && <Message variant='success'>{successMessage}</Message>}\n            </div>\n        </div>\n    )\n}\n\nexport default ForgotPassword;\n","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport api from '../../services/api';\nimport Message from '../Message';\n\nconst ForgotPassword = (props) => {\n    const [values, setValues] = useState({ password: \"\", confirmpassword: \"\" });\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    const handleChange = event => {\n        const { name, value } = event.target;\n        setValues(\n            {\n                ...values,\n                [name]: value\n            });\n    };\n\n    const UpdatePassword = async () => {\n        try {\n            const { password, confirmpassword } = values\n            if (password.length > 7 && confirmpassword.length > 7) {\n                const response = await api.put(\"/updatepassword\", { password, confirmpassword })\n                console.log(response.data);\n                const RefreshToken = localStorage.getItem(\"refreshToken\")\n                await api.post(\"/logout\", RefreshToken)\n                localStorage.removeItem(\"user\");\n                localStorage.removeItem(\"refreshToken\");\n                localStorage.removeItem(\"accessToken\");\n                toast.dark(response.data.message);\n                props.history.push(\"/login\")\n            } else {\n                setErrorMessage(\"Password Should be more than or equal to 8 characters\");\n                setTimeout(() => {\n                    setErrorMessage(\"\");\n                }, 3000);\n            }\n        } catch (error) {\n            console.log(error)\n            if (error.response && error.response.data) {\n                setErrorMessage(error.response.data.message);\n                setTimeout(() => {\n                    setErrorMessage(\"\");\n                }, 3000);\n            }\n        }\n    }\n\n    return (\n        <div className=\"my-content\">\n            <div className=\"container my-container3\">\n                <br /><br />\n                <h3>CHANGE PASSWORD</h3>\n                <input type=\"password\" name=\"password\" className=\"form-control\" placeholder=\"Enter Password\" value={values.password} onChange={handleChange} />\n                <br />\n                <input type=\"password\" name=\"confirmpassword\" className=\"form-control\" placeholder=\"Enter Confirm Password\" value={values.confirmpassword} onChange={handleChange} />\n                <br />\n                <button className=\"btn-info\" onClick={() => UpdatePassword()}>\n                    Reset Password\n                </button>\n                <br />\n                <br />\n                {errorMessage && <Message variant='danger'>{errorMessage}</Message>}\n            </div>\n        </div>\n    )\n}\n\nexport default ForgotPassword;\n","import React, { useEffect, useState } from \"react\";\nimport api from \"../services/api\";\nimport { toast } from \"react-toastify\"\n\n\nconst UpdateUser = (props) => {\n    const [values, setValues] = useState({ firstname: \"\", lastname: \"\", rollno: \"\", department: \"\", email: \"\", password: \"\", confirmpassword: \"\" });\n\n    const notify = () => {\n        toast.dark(\"Account Details Updated Sucessfully\")\n    }\n\n    const handleChange = event => {\n        const { name, value } = event.target;\n        setValues(\n            {\n                ...values,\n                [name]: value\n            });\n    };\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n        try {\n            const response = await api.put(\"/user/profile\", values,)\n            console.log(response.data);\n            notify()\n            props.history.push(\"/user/profile\")\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n\n    useEffect(() => {\n        const getDetails = async () => {\n            try {\n                const result = await api.get(\"/user/profile\");\n                const userdata = result.data;\n                setValues({ ...values, firstname: userdata.firstname, lastname: userdata.lastname, rollno: userdata.rollno, department: userdata.department, email: userdata.email });\n            } catch (error) {\n                console.log(error.response.data.message);\n            }\n        };\n        getDetails()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n\n    return (\n        <div className=\"my-content\">\n            <form className=\"text-center border border-light p-5\" onSubmit={handleSubmit} noValidate>\n                <div className=\"form-row mb-4\">\n                    <div className=\"col\">\n                        <input type=\"text\" name=\"firstname\" className=\"form-control \" placeholder=\"First Name\" value={values.firstname} onChange={handleChange} />\n                    </div>\n                    <div className=\"col\">\n                        <input type=\"text\" name=\"lastname\" className=\"form-control\" placeholder=\"Last Name\" value={values.lastname} onChange={handleChange} />\n                    </div>\n                </div>\n                <input type=\"text\" name=\"rollno\" className=\"form-control \" placeholder=\"Roll No\" value={values.rollno} onChange={handleChange} />\n                <br />\n                <select id=\"department\" className=\"form-control\" name=\"department\" value={values.department} onChange={handleChange} >\n                    <option value=\"\">Select a Department</option>\n                    <option value=\"MECH\">MECH</option>\n                    <option value=\"EEE\">EEE</option>\n                    <option value=\"ECE\">ECE</option>\n                    <option value=\"CSE\">CSE</option>\n                    <option value=\"IT\">IT</option>\n                </select>\n                <br />\n                <input type=\"email\" name=\"email\" className=\"form-control mb-4\" placeholder=\"E-mail\" value={values.email} onChange={handleChange} />\n                <h3>CHANGE PASSWORD</h3>\n                <input type=\"password\" name=\"password\" className=\"form-control\" placeholder=\"Password\" value={values.password} onChange={handleChange} />\n                <br />\n                <input type=\"password\" name=\"confirmpassword\" className=\"form-control\" placeholder=\"Confirm Password\" value={values.confirmpassword} onChange={handleChange} />\n                <button className=\"btn btn-info my-4 btn-block\" type=\"submit\">UPDATE</button>\n                <button className=\"btn btn-danger my-4 btn-block\" onClick={() => { props.history.push(\"/user/profile\") }}>CANCEL</button>\n            </form>\n        </div>\n    )\n}\nexport default UpdateUser;","import React, { useState, useEffect } from 'react'\nimport { Bar } from '@reactchartjs/react-chart.js'\nimport api from \"../../../services/api\";\n\nconst BarChart = () => {\n  const [chartData, setChartData] = useState({});\n\n  const chart = () => {\n    let departments = [\"MECH\", \"EEE\", \"CSE\", \"ECE\", \"IT\"];\n    let users = [];\n    for (const department of departments) {\n      api\n        .get(`/users/${department}`)\n        .then(res => {\n          users.push(res.data.length);\n          setChartData({\n            labels: departments,\n            datasets: [\n              {\n                label: '# of Users',\n                data: users,\n                backgroundColor: [\n                  'rgba(220,20,60,0.2)',\n                  'rgba(0,206,209,0.2)',\n                  'rgba(244,164,96,0.2)',\n                  'rgba(154,205,50,0.2)',\n                  'rgba(147,112,219,0.2)',\n                ],\n                borderColor: [\n                  'rgba(220,20,60,1)',\n                  'rgba(0,206,209,1)',\n                  'rgba(244,164,96,1)',\n                  'rgba(154,205,50,1)',\n                  'rgba(147,112,219,1)',\n                ],\n                borderWidth: 1,\n              },\n            ],\n          })\n        }\n        )\n        .catch(err => {\n          console.log(err)\n        })\n    }\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  }\n\n  useEffect(() => {\n    chart();\n  }, []);\n  return (\n    <Bar data={chartData} options={options} />\n  );\n};\n\nexport default BarChart;","import React, { useState, useEffect } from 'react'\nimport { Pie } from '@reactchartjs/react-chart.js'\nimport api from \"../../../services/api\";\n\nconst BarChart = () => {\n    const [chartData, setChartData] = useState({});\n\n    const chart = () => {\n        let categories = [\"Hackathon\", \"Workshop\", \"Technical Competitions\", \"Conference\"];\n        let events = [];\n        for (const category of categories) {\n            api\n                .get(`/events/${category}`)\n                .then(res => {\n                    events.push(res.data.length);\n                    setChartData({\n                        labels: categories,\n                        datasets: [\n                            {\n                                label: '# of Events',\n                                data: events,\n                                backgroundColor: [\n                                    'rgba(220,20,60,0.2)',\n                                    'rgba(0,206,209,0.2)',\n                                    'rgba(244,164,96,0.2)',\n                                    'rgba(154,205,50,0.2)',\n                                    'rgba(147,112,219,0.2)',\n                                ],\n                                borderColor: [\n                                    'rgba(220,20,60,1)',\n                                    'rgba(0,206,209,1)',\n                                    'rgba(244,164,96,1)',\n                                    'rgba(154,205,50,1)',\n                                    'rgba(147,112,219,1)',\n                                ],\n                                borderWidth: 1,\n                            },\n                        ],\n                    })\n                }\n                )\n                .catch(err => {\n                    console.log(err)\n                })\n        }\n    };\n\n\n    useEffect(() => {\n        chart();\n    }, []);\n    return (\n        <Pie data={chartData} />\n    );\n};\n\nexport default BarChart;","import React, { useState, useEffect } from \"react\";\nimport { Line } from \"@reactchartjs/react-chart.js\";\nimport api from \"../../../services/api\";\n\nconst Dankmemes = () => {\n  const [chartData, setChartData] = useState({});\n\n\n  const options = {\n    title: { text: \"THICKNESS SCALE\", display: true },\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            autoSkip: true,\n            maxTicksLimit: 10,\n            beginAtZero: true\n          },\n          gridLines: {\n            display: false\n          }\n        }\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            display: false\n          }\n        }\n      ]\n    }\n  }\n\n  useEffect(() => {\n    const chart = () => {\n      let registeredusers = [];\n      let events = [];\n      api\n        .get(\"/registrations\")\n        .then(res => {\n          for (const dataObj of res.data) {\n            registeredusers.push(dataObj.users.length);\n            api.get(`/event/${dataObj.event}`).then(res => {\n              events.push(res.data.title)\n              setChartData({\n                labels: events,\n                datasets: [\n                  {\n                    label: \"Registered Users per event\",\n                    data: registeredusers,\n                    backgroundColor: [\"rgba(30,144,255,0.2)\"],\n                    borderColor: [\"rgba(30,144,255,1)\"],\n                    borderWidth: 4\n                  }\n                ]\n              });\n            }).catch(err => {\n              console.log(err)\n            })\n          }\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    };\n    chart();\n  }, []);\n\n\n  return (\n    <Line\n      data={chartData}\n      options={options}\n    />\n  );\n};\n\nexport default Dankmemes;","import React, { useEffect, useState } from \"react\";\nimport BarChart from \"./charts/barchart\";\nimport PieChart from \"./charts/piechart\";\nimport LineChart from \"./charts/linechart\";\nimport { RiCalendarEventFill, RiShoppingCartFill } from \"react-icons/ri\"\nimport { FaUsers } from \"react-icons/fa\"\nimport { GiReceiveMoney } from \"react-icons/gi\"\nimport \"./admindashboard.css\"\nimport api from \"../../services/api\";\n\nconst AdminDashboard = () => {\n    const [eventscount, setEventscount] = useState(0)\n    const [userscount, setUserscount] = useState(0)\n    const [registercounts, setRegistercount] = useState(0)\n\n    const countEvent = async () => {\n        const response = await api.get(\"/events\")\n        console.log(response)\n        setEventscount(response.data.length)\n    }\n\n    const countUser = async () => {\n        const response = await api.get(\"/users\")\n        setUserscount(response.data.length)\n    }\n\n    const countRegister = async () => {\n        let count = []\n        const response = await api.get(\"/registrations\")\n        for (const dataObj of response.data) {\n            count.push(dataObj.users.length);\n        }\n        setRegistercount(count.reduce((a, b) => a + b, 0))\n    }\n\n    useEffect(() => {\n        countEvent()\n        countUser()\n        countRegister()\n    }, [])\n\n    return (\n        <div className=\"content my-content\">\n            <br />\n            <div className=\"container\">\n                <div className=\" row\">\n                    <div className=\"col-xl-3 col-sm-6 mb-3\">\n                        <div className=\"card text-white bg-secondary o-hidden h-100\">\n                            <div className=\"card-body\">\n                                <div className=\"card-body-icon\">\n                                    <RiCalendarEventFill size={50} />\n                                </div>\n                                <div className=\"mr-5\">{eventscount} Total Events</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-3 col-sm-6 mb-3\">\n                        <div className=\"card text-white bg-secondary o-hidden h-100\">\n                            <div className=\"card-body\">\n                                <div className=\"card-body-icon\">\n                                    <FaUsers size={60} />\n                                </div>\n                                <div className=\"mr-5\">{userscount} Total Users</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-3 col-sm-6 mb-3\">\n                        <div className=\"card text-white bg-secondary o-hidden h-100\">\n                            <div className=\"card-body\">\n                                <div className=\"card-body-icon\">\n                                    <RiShoppingCartFill size={50} />\n                                </div>\n                                <div className=\"mr-5\">{registercounts} Total Registrations</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-xl-3 col-sm-6 mb-3\">\n                        <div className=\"card text-white bg-secondary o-hidden h-100\">\n                            <div className=\"card-body\">\n                                <div className=\"card-body-icon\">\n                                    <GiReceiveMoney size={50} />\n                                </div>\n                                <div className=\"mr-5\">10,000 Total Amount</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <br />\n            <div className=\"container \">\n                <h2 style={{ textAlign: \"center\" }}>Analysis</h2>\n                <br />\n                <div className=\"row\">\n                    <div className=\"col-xl-6 col-sm-12\">\n                        <BarChart />\n                    </div>\n                    <div className=\"col-xl-6 col-sm-12\">\n                        <PieChart />\n                    </div>\n                </div>\n            </div>\n            <br />\n            <div className=\"container\">\n                <div className=\"row\">\n                    <LineChart />\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default AdminDashboard;","import React from 'react'\nimport { Button, Table } from 'reactstrap';\nimport { withRouter } from \"react-router-dom\"\nimport { FiEdit } from \"react-icons/fi\"\nimport { MdDelete } from \"react-icons/md\"\n\nconst EventTable = (props) => {\n\n\n    return (\n        <Table dark  bordered responsive>\n            <thead>\n                <tr>\n                    <th>Title</th>\n                    <th>Category</th>\n                    <th>Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n            {props.results.length > 0 ? (\n                    props.results.map((event) => (\n                        <tr key={event._id}>\n                            <td>{event.title}</td>\n                            <td>{event.category}</td>\n                            <td>\n                                <Button color=\"warning\" className=\"event-button\" onClick={() => { props.editEvent(event._id) }}> <FiEdit /></Button>\n                                <Button color=\"danger\" className=\"event-button\" onClick={() => { props.deleteEvent(event._id) }}><MdDelete /></Button>\n                            </td>\n                        </tr>\n                    ))\n                    ) : (\n                        <tr>\n                          <td colSpan={3}>No events</td>\n                        </tr>\n                      )}\n            </tbody>\n        </Table>\n    )\n}\n\nexport default withRouter(EventTable);","import React, { useState, useEffect } from 'react';\nimport { Button, Input } from 'reactstrap';\nimport api from '../../services/api';\nimport EventTable from './eventtable';\nimport Message from \"../../components/Message\";\nimport { SiAddthis } from \"react-icons/si\"\n\n\nconst ManageEvents = (props) => {\n    const [events, setEvents] = useState([]);\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [successMessage, setSuccessMessage] = useState(\"\");\n\n    const results = !searchTerm\n        ? events\n        : events.filter(event =>\n            event.title.toLowerCase().includes(searchTerm.toLocaleLowerCase())\n        );\n\n\n    const getEvents = async () => {\n        try {\n            const response = await api.get(\"/events\");\n            setEvents(response.data);\n        } catch (error) {\n            console.log(error)\n        }\n    };\n\n    useEffect(() => {\n        getEvents()\n    }, [])\n\n    const editEvent = async (id) => {\n        props.history.push({\n            pathname: \"/admin/event/update/\" + id\n        });\n    }\n\n    const deleteEvent = async (id) => {\n        try {\n            await api.delete(\"/manageregistrations/\" + id)\n            await api.delete(\"/manageevents/\" + id,)\n            getEvents()\n            setSuccessMessage(\"Event Deleted Sucessfully\")\n            setTimeout(() => {\n                setSuccessMessage(\"\");\n            }, 3000);\n        } catch (error) {\n            if (error.response && error.response.data) {\n                setErrorMessage(error.response.data.message);\n                setTimeout(() => {\n                    setErrorMessage(\"\");\n                }, 3000);\n            }\n        }\n\n    }\n\n\n    return (\n        <div className=\"container my-content\">\n            <h2 style={{ textAlign: \"center\" }}>EVENTS</h2>\n            <div className=\"row \">\n                <Input\n                    type=\"text\"\n                    placeholder=\"Search Events\"\n                    value={searchTerm}\n                    onChange={(evt) => setSearchTerm(evt.target.value)}\n                />\n                <Button className=\"event-button\" size=\"lg\" block color=\"info\" onClick={() => { props.history.push(\"/admin/create/event\") }}><SiAddthis />   Add Event</Button>\n            </div>\n            <div className=\"row text-center\">\n                <EventTable results={results} editEvent={editEvent} deleteEvent={deleteEvent} />\n            </div>\n            {successMessage && <Message variant=\"success\">{successMessage}</Message>}\n            {errorMessage && <Message variant=\"danger\">{errorMessage}</Message>}\n        </div>\n    )\n}\n\nexport default ManageEvents;","import React from 'react'\nimport { Button, Table } from 'reactstrap';\nimport { withRouter } from \"react-router-dom\"\nimport { FaThList } from \"react-icons/fa\"\n\nconst EventTable = (props) => {\n\n\n    return (\n        <Table dark  bordered responsive>\n            <thead>\n                <tr>\n                    <th>Title</th>\n                    <th>Category</th>\n                    <th>Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n            {props.results.length > 0 ? (\n                    props.results.map((event) => (\n                        <tr key={event._id}>\n                            <td>{event.title}</td>\n                            <td>{event.category}</td>\n                            <td>\n                                <Button color=\"warning\" className=\"event-button\" onClick={() => { props.registeredUsers(event._id) }}> <FaThList /> Registered Users</Button>\n                            </td>\n                        </tr>\n                    ))\n                    ) : (\n                        <tr>\n                          <td colSpan={3}>No events</td>\n                        </tr>\n                      )}\n            </tbody>\n        </Table>\n    )\n}\n\nexport default withRouter(EventTable);","import React, { useState, useEffect } from 'react';\nimport {  Input } from 'reactstrap';\nimport api from '../../services/api';\nimport EventTable from './registrationeventtable';\n\n\nconst ManageEvents = (props) => {\n    const [events, setEvents] = useState([]);\n    const [searchTerm, setSearchTerm] = useState(\"\");\n\n    const results = !searchTerm\n        ? events\n        : events.filter(event =>\n            event.title.toLowerCase().includes(searchTerm.toLocaleLowerCase())\n        );\n\n\n    const getEvents = async () => {\n        try {\n            const response = await api.get(\"/events\");\n            setEvents(response.data);\n        } catch (error) {\n            console.log(error)\n        }\n    };\n\n    useEffect(() => {\n        getEvents()\n    }, [])\n\n    const registeredUsers = async (id) => {\n        props.history.push({\n            pathname: \"/admin/\" + id + \"/registeredusers\"\n        });\n    }\n\n\n    return (\n        <div className=\"container my-content\">\n            <h2 style={{ textAlign: \"center\" }}>EVENTS</h2>\n            <div className=\"row \">\n                <Input\n                    type=\"text\"\n                    placeholder=\"Search Events\"\n                    value={searchTerm}\n                    onChange={(evt) => setSearchTerm(evt.target.value)}\n                />\n            </div>\n            <br/>\n            <div className=\"row text-center\">\n                <EventTable results={results} registeredUsers={registeredUsers}  />\n            </div>\n        </div>\n    )\n}\n\nexport default ManageEvents;","import React from 'react'\nimport { Button, Table } from 'reactstrap';\nimport { withRouter } from \"react-router-dom\"\nimport { IoMdCheckmarkCircle } from \"react-icons/io\"\n\nconst EventTable = (props) => {\n\n\n    return (\n        <Table dark  bordered responsive>\n            <thead>\n                <tr>\n                    <th>Title</th>\n                    <th>Category</th>\n                    <th>Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n            {props.results.length > 0 ? (\n                    props.results.map((event) => (\n                        <tr key={event._id}>\n                            <td>{event.title}</td>\n                            <td>{event.category}</td>\n                            <td>\n                                <Button color=\"warning\" className=\"event-button\" onClick={() => { props.markAttendance(event._id) }}> <IoMdCheckmarkCircle size=\"1rem\" /> Mark Attendance</Button>\n                            </td>\n                        </tr>\n                    ))\n                    ) : (\n                        <tr>\n                          <td colSpan={3}>No events</td>\n                        </tr>\n                      )}\n            </tbody>\n        </Table>\n    )\n}\n\nexport default withRouter(EventTable);","import React, { useState, useEffect } from 'react';\nimport {  Input } from 'reactstrap';\nimport api from '../../services/api';\nimport EventTable from './attendanceeventtable';\n\n\nconst ManageEvents = (props) => {\n    const [events, setEvents] = useState([]);\n    const [searchTerm, setSearchTerm] = useState(\"\");\n\n    const results = !searchTerm\n        ? events\n        : events.filter(event =>\n            event.title.toLowerCase().includes(searchTerm.toLocaleLowerCase())\n        );\n\n\n    const getEvents = async () => {\n        try {\n            const response = await api.get(\"/events\");\n            setEvents(response.data);\n        } catch (error) {\n            console.log(error)\n        }\n    };\n\n    useEffect(() => {\n        getEvents()\n    }, [])\n\n    const markAttendance = async (id) => {\n        props.history.push({\n            pathname: \"/admin/\" + id + \"/markattendance\"\n        });\n    }\n\n\n    return (\n        <div className=\"container my-content\">\n            <h2 style={{ textAlign: \"center\" }}>EVENTS</h2>\n            <div className=\"row \">\n                <Input\n                    type=\"text\"\n                    placeholder=\"Search Events\"\n                    value={searchTerm}\n                    onChange={(evt) => setSearchTerm(evt.target.value)}\n                />\n            </div>\n            <br/>\n            <div className=\"row text-center\">\n                <EventTable results={results} markAttendance={markAttendance}  />\n            </div>\n        </div>\n    )\n}\n\nexport default ManageEvents;","import React, { useEffect, useState } from 'react';\nimport { Button, Table, Input } from 'reactstrap';\nimport { withRouter } from \"react-router-dom\";\nimport Message from \"../../components/Message\";\nimport { MdDelete } from \"react-icons/md\";\nimport api from '../../services/api';\n\n\nconst EventTable = (props) => {\n    const [registeredusers, setRegisteredusers] = useState([]);\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [successMessage, setSuccessMessage] = useState(\"\");\n\n    const results = !searchTerm\n        ? registeredusers\n        : registeredusers.filter(user =>\n            user.email.toLowerCase().includes(searchTerm.toLocaleLowerCase())\n        );\n\n    useEffect(() => {\n        getRegisteredUsers();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n\n    const getRegisteredUsers = async () => {\n        try {\n            const url = \"/event/\" + props.match.params.id + \"/registeredusers\"\n            const response = await api.get(url)\n            console.log(response.data)\n            setRegisteredusers(response.data.users)\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const deleteUser = async (id) => {\n        try {\n            const user_id = id;\n            await api.delete(\"/event/\" + props.match.params.id + \"/unregister\", { headers: { user_id } });\n            getRegisteredUsers();\n            setSuccessMessage(\"Registered User Deleted Sucessfully\")\n            setTimeout(() => {\n                setSuccessMessage(\"\");\n            }, 3000);\n        } catch (error) {\n            if (error.response && error.response.data) {\n                setErrorMessage(error.response.data.message);\n                setTimeout(() => {\n                    setErrorMessage(\"\");\n                }, 3000);\n            }\n        }\n    }\n\n    return (\n        <div className=\"container my-content\">\n            <br />\n            <h2 style={{ textAlign: \"center\" }}>REGISTERED USERS</h2>\n            <br />\n            <Input\n                type=\"text\"\n                placeholder=\"Search User By Email \"\n                value={searchTerm}\n                onChange={(evt) => setSearchTerm(evt.target.value)}\n            />\n            <br/>\n            <Table dark bordered responsive>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>RollNo</th>\n                        <th>Department</th>\n                        <th>EmailID</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {results.length > 0 ? (\n                        results.map((user) => (\n                            <tr key={user._id}>\n                                <td>{user.firstname}</td>\n                                <td>{user.rollno}</td>\n                                <td>{user.department}</td>\n                                <td>{user.email}</td>\n                                <td>\n                                    <Button color=\"danger\" className=\"event-button\" onClick={() => { deleteUser(user._id) }}><MdDelete /></Button>\n                                </td>\n                            </tr>\n                        ))\n                    ) : (\n                            <tr>\n                                <td colSpan={3}>No users</td>\n                            </tr>\n                        )}\n                </tbody>\n            </Table>\n            {successMessage && <Message variant=\"success\">{successMessage}</Message>}\n            {errorMessage && <Message variant=\"danger\">{errorMessage}</Message>}\n        </div>\n    )\n}\n\nexport default withRouter(EventTable);","import React, { useState, useEffect } from \"react\";\nimport { Container, Form, FormGroup, Input, Table, ModalBody, ModalHeader, Modal, Button } from \"reactstrap\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport {FaFileDownload} from \"react-icons/fa\";\nimport api from \"../../services/api\";\nimport Message from \"../../components/Message\";\nimport ModalFooter from \"reactstrap/lib/ModalFooter\";\n\n\nconst MarkAttendance = (props) => {\n    const [rollno, setRollno] = useState(\"\");\n    const [user, setUser] = useState([]);\n    const [attendedusers, setAttendedusers] = useState([]);\n    const [marks, setMarks] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    \n\n    const toggle = () => setModal(!modal);\n    const fullname = (firstname,lastname) => {\n        return  firstname + \" \" + lastname ;\n    };\n\n\n    const submitHandler = async (event) => {\n        event.preventDefault();\n        try {\n            if (rollno !== \"\") {\n                const response = await api.post(\"/searchuser\", { rollno: rollno });\n                setUser(response.data)\n                setRollno(\"\");\n            }\n            else {\n                setErrorMessage(\"please Fill user rollno\")\n            }\n        } catch (error) {\n            if (error.response && error.response.data) {\n                setErrorMessage(error.response.data.message);\n                setTimeout(() => {\n                    setErrorMessage(\"\");\n                }, 3000);\n            }\n        }\n    }\n\n    useEffect(() => {\n        getRegisteredUsers();\n        getMarks();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const getRegisteredUsers = async () => {\n        try {\n            const url = \"/event/\" + props.match.params.id + \"/attendedusers\"\n            const response = await api.get(url)\n            console.log(response.data)\n            setAttendedusers(response.data.users)\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const getMarks = async() =>{\n        try {\n            const response = await api.get(\"/\" + props.match.params.id + \"/marks\");\n            console.log(response)\n            setMarks(response.data)\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const acceptUser = async (id) => {\n        try {\n            const user_id = id;\n            await api.get(\"/\" + props.match.params.id + \"/accept\", { headers: { user_id } });\n            toggle();\n            getRegisteredUsers();\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    const exportPDF = () => {\n        const unit = \"pt\";\n        const size = \"A4\"; // Use A1, A2, A3 or A4\n        const orientation = \"portrait\"; // portrait or landscape\n\n        const doc = new jsPDF(orientation, unit, size);\n\n        doc.setFontSize(15);\n\n        let orderedmarks=[]\n        attendedusers.map(users =>{\n            marks.map(mark =>{\n                if(users._id === mark.user){\n                    orderedmarks.push(mark.marks)\n                }\n            })\n        })\n        console.log(orderedmarks)\n        const headers = [[\"NAME\", \"EMAILID\", \"ROLLNO\", \"DEPARTMENT\",\"MARKS\"]];\n        console.log(attendedusers)\n        let data = attendedusers.map((user,index) => [fullname(user.firstname,user.lastname),user.email,user.rollno,user.department,orderedmarks[index]]);\n\n        let content = {\n            startY: 50,\n            theme: 'grid',\n            head: headers,\n            body: data,\n        };\n\n        doc.setLineWidth(2);\n        doc.text( \"ATTENDED STUDENTS\",200,40);\n        doc.autoTable(content);\n        doc.save(\"attendedlist.pdf\")\n    }\n\n\n    return (\n        <Container className=\"content my-content\">\n            <h2 style={{ textAlign: \"center\" }}>MARK ATTENDANCE</h2>\n            <Form onSubmit={submitHandler}>\n                <FormGroup>\n                    <Input id=\"rollno\" bsSize=\"md\" type=\"text\" value={rollno} placeholder={'Enter User RollNo'} onChange={(evt) => setRollno(evt.target.value)} required />\n                </FormGroup>\n                <Button type=\"submit\" color=\"info\" onClick={toggle} >Search User</Button>\n            </Form>\n            <Modal isOpen={modal} toggle={toggle} >\n                <ModalHeader className=\" border-0\" cssModule={{ 'modal-title': 'w-100 text-center' }} toggle={toggle} >\n                    USER DETAILS\n                </ModalHeader>\n                <ModalBody>\n                    <Container>\n                        <img src={user.profilepic} alt=\"dummy\" className=\"profile-pic\" />\n                        <hr />\n                        <h5>NAME : {fullname(user.firstname,user.lastname)}</h5>\n                        <hr />\n                        <h5>EMAIL ID : {user.email}</h5>\n                        <hr />\n                        <h5>ROLL NO : {user.rollno}</h5>\n                        <hr />\n                        <h5>DEPARTMENT : {user.department}</h5>\n                    </Container>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"info\" onClick={() => { acceptUser(user._id) }}>ACCEPT</Button>\n                    <Button color=\"danger\" onClick={toggle}>REJECT</Button>\n                </ModalFooter>\n            </Modal>\n            {errorMessage && <Message variant='danger'>{errorMessage}</Message>}\n            <br />\n            <div className=\"separator\"><h4> EVENT PARTICIPATED USERS</h4></div>\n            <Button onClick={exportPDF} color=\"danger\" className=\"float-right\"><FaFileDownload/> Download Attended Students List</Button>\n            <br />\n            <Table dark bordered responsive>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>RollNo</th>\n                        <th>Department</th>\n                        <th>EmailID</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {attendedusers.length > 0 ? (\n                        attendedusers.map((user) => (\n                            <tr key={user._id}>\n                                <td>{fullname(user.firstname,user.lastname)}</td>\n                                <td>{user.rollno}</td>\n                                <td>{user.department}</td>\n                                <td>{user.email}</td>\n                            </tr>\n                        ))\n                    ) : (\n                            <tr>\n                                <td colSpan={3}>No users</td>\n                            </tr>\n                        )}\n                </tbody>\n            </Table>\n        </Container>\n    )\n}\nexport default MarkAttendance;","import React, { useState, useMemo, useEffect } from 'react';\nimport api from '../../services/api';\nimport { Container, Button, Form, FormGroup, Input, Label, } from 'reactstrap';\nimport moment from 'moment';\nimport { GoDeviceCamera } from \"react-icons/go\";\nimport Message from \"../../components/Message\";\nimport \"./example.css\";\nimport { toast } from 'react-toastify';\n\n\nconst CreateEvent = ({ history, match }) => {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [price, setPrice] = useState('');\n    const [category, setCategory] = useState(\"\");\n    const [sponsors, setSponsors] = useState(\"\");\n    const [date, setDate] = useState('');\n    const [registrationenddate, setEndDate] = useState('');\n    const [thumbnail, setThumbnail] = useState(null);\n    const [editthumbnail, setEditThumbnail] = useState(null);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [successMessage, setSuccessMessage] = useState(\"\");\n    const { id } = match.params;\n    const isAddMode = !id;\n\n    const notify = () => {\n        toast.dark(\"Event Updated Sucessfully\")\n    }\n\n    const preview = useMemo(() => {\n        return thumbnail ? URL.createObjectURL(thumbnail) : null;\n    }, [thumbnail]);\n\n    const resetForm = () => {\n        setTitle(\"\");\n        setDescription(\"\");\n        setPrice(\"\");\n        setCategory(\"\");\n        setSponsors(\"\");\n        setDate(\"\");\n        setEndDate(\"\");\n        setThumbnail(null);\n    }\n\n    const submitHandler = async (event) => {\n        event.preventDefault();\n        return isAddMode ? CreateEvent(event) : UpdateEvent(event, id);\n    }\n\n    const CreateEvent = async (event) => {\n        const eventData = new FormData();\n\n        eventData.append(\"thumbnail\", thumbnail);\n        eventData.append(\"category\", category);\n        eventData.append(\"title\", title);\n        eventData.append(\"price\", price);\n        eventData.append(\"description\", description);\n        eventData.append(\"sponsors\", sponsors);\n        eventData.append(\"date\", date);\n        eventData.append(\"registrationenddate\", registrationenddate);\n        try {\n            if (title !== \"\" &&\n                description !== \"\" &&\n                category !== \"\" &&\n                price !== \"\" &&\n                sponsors !== \"\" &&\n                registrationenddate !== \"\" &&\n                date !== \"\" &&\n                thumbnail !== null\n            ) {\n                console.log(\"Event has been sent\");\n                await api.post(\"/admin/createevent\", eventData);\n                setSuccessMessage(\"Event Sucessfully Created\");\n                resetForm();\n                setTimeout(() => {\n                    setSuccessMessage(\"\");\n                }, 3000);\n            } else {\n                setErrorMessage(\"Missing Required Information\");\n                setTimeout(() => {\n                    setErrorMessage(\"\")\n                }, 3000);\n\n                console.log(\"Missing required data\");\n            }\n        } catch (error) {\n            Promise.reject(error);\n            console.log(error);\n        }\n    }\n\n    const UpdateEvent = async (id) => {\n        try {\n            const eventData = new FormData();\n\n            eventData.append(\"thumbnail\", thumbnail);\n            eventData.append(\"category\", category);\n            eventData.append(\"title\", title);\n            eventData.append(\"price\", price);\n            eventData.append(\"description\", description);\n            eventData.append(\"sponsors\", sponsors);\n            eventData.append(\"date\", date);\n            eventData.append(\"registrationenddate\", registrationenddate);\n            await api.put(\"/manageevents/\" + match.params.id, eventData);\n            notify()\n            history.push(\"/admin/events\")\n        } catch (error) {\n            if (error.response && error.response.data) {\n                setErrorMessage(error.response.data.message);\n                setTimeout(() => {\n                    setErrorMessage(\"\");\n                }, 3000);\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (!isAddMode) {\n            api.get(\"/event/\" + match.params.id,).then(user => {\n                const details = user.data\n                setTitle(details.title)\n                setDescription(details.description)\n                setCategory(details.category)\n                setPrice(details.price)\n                setEditThumbnail(details.thumbnail)\n                setSponsors(details.sponsors)\n                setDate(moment(details.date).format(\"YYYY-MM-DD\"));\n                setEndDate(moment(details.registrationenddate).format(\"YYYY-MM-DD\"));\n                console.log(details)\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const ChangeThumbnail = async (event) => {\n        setThumbnail(event.target.files[0])\n        setEditThumbnail(null)\n    }\n\n\n    return (\n        <Container className=\"content my-content\">\n            <h2 style={{ textAlign: \"center\" }}>{isAddMode ? \"Add Event\" : \"Edit Event\"}</h2>\n            <br /><br />\n            <Form onSubmit={submitHandler}>\n                {\n                    isAddMode ? (\n                        <br />\n                    ) : (editthumbnail ?\n                        (<FormGroup>\n                            <img className=\"editeventimg\" src={editthumbnail} alt=\"projectimage\" width=\"300\" height=\"200\"/>\n                        </FormGroup>) : (<br />)\n                        )\n                }\n                <FormGroup>\n                    <Label>Upload Image: </Label>\n                    <Label id='thumbnail' style={{ backgroundImage: `url(${preview})` }} className={thumbnail ? 'has-thumbnail' : ''}>\n                        <Input type=\"file\" onChange={ChangeThumbnail} />\n                        <GoDeviceCamera />\n                    </Label>\n                </FormGroup>\n                <FormGroup>\n                    <Label>Title: </Label>\n                    <Input id=\"title\" type=\"text\" value={title} placeholder={'Event Title'} onChange={(evt) => setTitle(evt.target.value)} />\n                </FormGroup>\n                <FormGroup>\n                    <Label>Event description: </Label>\n                    <Input id=\"description\" type=\"text\" value={description} placeholder={'Event Description'} onChange={(evt) => setDescription(evt.target.value)} />\n                </FormGroup>\n                <FormGroup>\n                    <Label>Event Sponsors: </Label>\n                    <Input id=\"sponsors\" type=\"text\" value={sponsors} placeholder={'Event Sponsors'} onChange={(evt) => setSponsors(evt.target.value)} />\n                </FormGroup>\n                <FormGroup>\n                    <Label>Event price: </Label>\n                    <Input id=\"price\" type=\"text\" value={price} placeholder={'Event Price(Rupees)'} onChange={(evt) => setPrice(evt.target.value)} />\n                </FormGroup>\n                <FormGroup>\n                    <Label>Event date: </Label>\n                    <Input id=\"date\" type=\"date\" value={date} placeholder={'Event Date'} onChange={(evt) => setDate(evt.target.value)} />\n                </FormGroup>\n                <FormGroup>\n                    <Label>Event Registration End Date: </Label>\n                    <Input id=\"registrationenddate\" type=\"date\" value={registrationenddate} placeholder={'Registration End Date'} onChange={(evt) => setEndDate(evt.target.value)} />\n                </FormGroup>\n                <FormGroup>\n                    <label htmlFor=\"category\">Choose a category:</label>\n                    <select id=\"category\" name=\"category\" value={category} onChange={(evt) => setCategory(evt.target.value)} >\n                        <option value=\"\">Select a Category</option>\n                        <option value=\"Conference\">Conference</option>\n                        <option value=\"Hackathon\">Hackathon</option>\n                        <option value=\"Workshop\">Workshop</option>\n                        <option value=\"Technical Competitions\">Technical Competitions</option>\n                        <option value=\"Programming Competitions\">Programming Competitions</option>\n                    </select>\n                </FormGroup>\n                <Button className=\"event-button\" type=\"submit\" color=\"info\" >\n                    {isAddMode ? \"Create Event\" : \"Update Event\"}\n                </Button>\n                <Button className=\"event-button\" color=\"danger\" onClick={() => { history.push(\"/admin/events\") }}>Cancel</Button>\n                <br /><br />\n            </Form>\n            {successMessage && <Message variant=\"success\">{successMessage}</Message>}\n            {errorMessage && <Message variant=\"danger\">{errorMessage}</Message>}\n        </Container>\n    )\n}\nexport default CreateEvent;","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst ScrollToTop = ({ children }) => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return children || null;\n};\n\nexport default ScrollToTop;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isAuthenticated } from \"./auth\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isAuthenticated() ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isAuthenticated } from \"./auth\";\n\nconst AdminRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isAuthenticated() && isAuthenticated().isAdmin ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default AdminRoute;\n","import React from 'react';\nimport './App.css';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Header from './components/header';\nimport Events from './components/Events/events';\nimport Signup from './components/Signup/signup';\nimport Login from './components/Login/login';\nimport Content from './components/Home/home';\nimport Footer from './components/footer';\nimport Quiz from './components/Quiz/quiz';\nimport OnlineCompiler from './components/OnlineCompiler/onlinecompiler';\nimport EventDetails from './components/EvenDetails/eventdetails';\nimport UserDetails from './components/UserDetails/userdetails';\nimport ForgotPassword from './components/ResetPassword/forgotpassword';\nimport ResetPassword from './components/ResetPassword/resetpassword';\nimport UpdatePassword from './components/ResetPassword/updatepassword';\nimport UpdateUserDetails from './components/UpdateUserDetails';\nimport AdminDashboard from './admin/AdminDashboard/admindashboard';\nimport ManageEvents from './admin/ManageEvents/manageevents';\nimport ManageRegistrations from './admin/ManageRegistrations/manageregistrations';\nimport ManageAttendances from './admin/ManageAttendance/manageattendance';\nimport RegisteredUsersTable from './admin/ManageRegistrations/registreduserstable';\nimport MarkAttendance from './admin/ManageAttendance/markattendance';\nimport AddEvent from './admin/example/example'\nimport ScrollToTop from './components/scrolltotop';\n\nimport PrivateRoute from './Auth/PrivateRoutes';\nimport AdminRoute from './Auth/AdminRoutes';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n\n\nfunction App() {\n  return (\n    <Router >\n      <div className=\"App\">\n        <ToastContainer hideProgressBar />\n        <Header />\n        <Switch>\n            <Route path=\"/\" exact component={Content} />\n            <Route path=\"/events\" exact component={Events} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/user/reset-password\" exact component={ForgotPassword} />\n            <Route exact path=\"/reset/:token\" component={ResetPassword} />\n            <PrivateRoute path=\"/user/update-password\" exact component={UpdatePassword} />\n            <PrivateRoute path=\"/user/profile\" exact component={UserDetails} />\n            <PrivateRoute path=\"/user/updateprofile\" exact component={UpdateUserDetails} />\n            <PrivateRoute path=\"/quiz/:id\" exact component={Quiz} />\n            <PrivateRoute path=\"/compiler\" exact component={OnlineCompiler} />\n            <AdminRoute path=\"/admin/dashboard\" exact component={AdminDashboard} />\n            <AdminRoute path=\"/admin/events\" exact component={ManageEvents} />\n            <AdminRoute path=\"/admin/create/event\" exact component={AddEvent} />\n            <AdminRoute path=\"/admin/event/update/:id\" exact component={AddEvent} />\n            <AdminRoute path=\"/admin/registrations\" exact component={ManageRegistrations} />\n            <AdminRoute path=\"/admin/attendances\" exact component={ManageAttendances} />\n            <AdminRoute path=\"/admin/:id/registeredusers\" exact component={RegisteredUsersTable} />\n            <AdminRoute path=\"/admin/:id/markattendance\" exact component={MarkAttendance} />\n            <ScrollToTop><PrivateRoute path=\"/event/:id\" exact component={EventDetails} /></ScrollToTop>\n        </Switch>\n        <Footer/>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}